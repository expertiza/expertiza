<?xml version="1.0" encoding="UTF-8"?>
<Settings><!--This file was automatically generated by Ruby plugin.
You are allowed to: 
1. Remove rake task
2. Add existing rake tasks
To add existing rake tasks automatically delete this file and reload the project.
--><RakeGroup description="" fullCmd="" taksId="rake"><RakeTask description="List versions of all Rails frameworks and the environment" fullCmd="about" taksId="about" /><RakeTask description="Convert line endings to unix for all files under the current directory" fullCmd="alldos2unix" taksId="alldos2unix" /><RakeGroup description="" fullCmd="" taksId="craken"><RakeTask description="Install raketab script" fullCmd="craken:install" taksId="install" /><RakeTask description="Uninstall cron jobs associated with application" fullCmd="craken:uninstall" taksId="uninstall" /></RakeGroup><RakeTask description="Alias for cucumber:ok" fullCmd="cucumber" taksId="cucumber" /><RakeGroup description="" fullCmd="" taksId="cucumber"><RakeTask description="Run all features" fullCmd="cucumber:all" taksId="all" /><RakeTask description="Run features that should pass" fullCmd="cucumber:ok" taksId="ok" /><RakeTask description="Record failing features and run only them if any exist" fullCmd="cucumber:rerun" taksId="rerun" /><RakeTask description="Run features that are being worked on" fullCmd="cucumber:wip" taksId="wip" /><RakeTask description="" fullCmd="cucumber:statsetup" taksId="statsetup" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="db"><RakeTask description="Create the database from config/database.yml for the current Rails.env (use db:create:all to create all dbs in the config)" fullCmd="db:create" taksId="create" /><RakeGroup description="" fullCmd="" taksId="data"><RakeTask description="Performs all idempotent data migrations" fullCmd="db:data:migrate" taksId="migrate" /></RakeGroup><RakeTask description="Outputs the current database schema diagram to ./db" fullCmd="db:diagram" taksId="diagram" /><RakeTask description="Drops the database for the current Rails.env (use db:drop:all to drop all databases)" fullCmd="db:drop" taksId="drop" /><RakeGroup description="" fullCmd="" taksId="fixtures"><RakeTask description="Load fixtures into the current environment's database" fullCmd="db:fixtures:load" taksId="load" /><RakeTask description="" fullCmd="db:fixtures:identify" taksId="identify" /></RakeGroup><RakeTask description="Migrate the database (options: VERSION=x, VERBOSE=false)" fullCmd="db:migrate" taksId="migrate" /><RakeGroup description="" fullCmd="" taksId="migrate"><RakeTask description="Display status of migrations" fullCmd="db:migrate:status" taksId="status" /><RakeTask description="" fullCmd="db:migrate:down" taksId="down" /><RakeTask description="" fullCmd="db:migrate:redo" taksId="redo" /><RakeTask description="" fullCmd="db:migrate:reset" taksId="reset" /><RakeTask description="" fullCmd="db:migrate:up" taksId="up" /></RakeGroup><RakeTask description="Rolls the schema back to the previous version (specify steps w/ STEP=n)" fullCmd="db:rollback" taksId="rollback" /><RakeGroup description="" fullCmd="" taksId="schema"><RakeTask description="Create a db/schema.rb file that can be portably used against any DB supported by AR" fullCmd="db:schema:dump" taksId="dump" /><RakeTask description="Load a schema.rb file into the database" fullCmd="db:schema:load" taksId="load" /></RakeGroup><RakeTask description="Load the seed data from db/seeds.rb" fullCmd="db:seed" taksId="seed" /><RakeTask description="Create the database, load the schema, and initialize with the seed data (use db:reset to also drop the db first)" fullCmd="db:setup" taksId="setup" /><RakeGroup description="" fullCmd="" taksId="structure"><RakeTask description="Dump the database structure to an SQL file" fullCmd="db:structure:dump" taksId="dump" /></RakeGroup><RakeTask description="Retrieves the current schema version number" fullCmd="db:version" taksId="version" /><RakeTask description="" fullCmd="db:abort_if_pending_migrations" taksId="abort_if_pending_migrations" /><RakeTask description="" fullCmd="db:charset" taksId="charset" /><RakeTask description="" fullCmd="db:collation" taksId="collation" /><RakeGroup description="" fullCmd="" taksId="create"><RakeTask description="" fullCmd="db:create:all" taksId="all" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="drop"><RakeTask description="" fullCmd="db:drop:all" taksId="all" /></RakeGroup><RakeTask description="" fullCmd="db:forward" taksId="forward" /><RakeTask description="" fullCmd="db:load_config" taksId="load_config" /><RakeTask description="" fullCmd="db:reset" taksId="reset" /><RakeGroup description="" fullCmd="" taksId="sessions"><RakeTask description="" fullCmd="db:sessions:clear" taksId="clear" /><RakeTask description="" fullCmd="db:sessions:create" taksId="create" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="" fullCmd="db:test:clone" taksId="clone" /><RakeTask description="" fullCmd="db:test:clone_structure" taksId="clone_structure" /><RakeTask description="" fullCmd="db:test:load" taksId="load" /><RakeTask description="" fullCmd="db:test:prepare" taksId="prepare" /><RakeTask description="" fullCmd="db:test:purge" taksId="purge" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="doc"><RakeTask description="Generate docs for the app -- also available doc:rails, doc:guides, doc:plugins (options: TEMPLATE=/rdoc-template.rb, TITLE=&quot;Custom Title&quot;)" fullCmd="doc:app" taksId="app" /><RakeTask description="" fullCmd="doc:clobber" taksId="clobber" /><RakeTask description="" fullCmd="doc:clobber_app" taksId="clobber_app" /><RakeTask description="" fullCmd="doc:clobber_plugins" taksId="clobber_plugins" /><RakeTask description="" fullCmd="doc:clobber_rails" taksId="clobber_rails" /><RakeTask description="" fullCmd="doc:guides" taksId="guides" /><RakeTask description="" fullCmd="doc:plugins" taksId="plugins" /><RakeGroup description="" fullCmd="" taksId="plugins"><RakeTask description="" fullCmd="doc:plugins:acts_as_nested_set" taksId="acts_as_nested_set" /><RakeTask description="" fullCmd="doc:plugins:auto_complete" taksId="auto_complete" /><RakeTask description="" fullCmd="doc:plugins:craken" taksId="craken" /><RakeTask description="" fullCmd="doc:plugins:dynamic_form" taksId="dynamic_form" /><RakeTask description="" fullCmd="doc:plugins:gc4r" taksId="gc4r" /><RakeTask description="" fullCmd="doc:plugins:graphr-0-1-9" taksId="graphr-0-1-9" /><RakeTask description="" fullCmd="doc:plugins:rails_upgrade" taksId="rails_upgrade" /><RakeTask description="" fullCmd="doc:plugins:redbox" taksId="redbox" /></RakeGroup><RakeTask description="" fullCmd="doc:rails" taksId="rails" /><RakeTask description="" fullCmd="doc:reapp" taksId="reapp" /><RakeTask description="" fullCmd="doc:rerails" taksId="rerails" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="goldberg"><RakeTask description="Dump standard Goldberg tables to files in db/" fullCmd="goldberg:dump_starter" taksId="dump_starter" /><RakeTask description="Flush cached data out of sessions and Roles" fullCmd="goldberg:flush" taksId="flush" /><RakeTask description="Install Goldberg" fullCmd="goldberg:install" taksId="install" /><RakeTask description="Load standard Goldberg tables from files in db/" fullCmd="goldberg:load_starter" taksId="load_starter" /><RakeTask description="Upgrade a legacy Goldberg database to the latest version" fullCmd="goldberg:upgrade" taksId="upgrade" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="hoptoad"><RakeTask description="Notify Hoptoad of a new deploy" fullCmd="hoptoad:deploy" taksId="deploy" /><RakeGroup description="" fullCmd="" taksId="heroku"><RakeTask description="Install Heroku deploy notifications addon" fullCmd="hoptoad:heroku:add_deploy_notification" taksId="add_deploy_notification" /></RakeGroup><RakeTask description="Verify your gem installation by sending a test exception to the hoptoad service" fullCmd="hoptoad:test" taksId="test" /><RakeTask description="" fullCmd="hoptoad:log_stdout" taksId="log_stdout" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="jobs"><RakeTask description="Exit with error status if any jobs older than max_age seconds haven't been attempted yet" fullCmd="jobs:check[max_age]" taksId="check[max_age]" /><RakeTask description="Clear the delayed_job queue" fullCmd="jobs:clear" taksId="clear" /><RakeTask description="Start a delayed_job worker" fullCmd="jobs:work" taksId="work" /><RakeTask description="Start a delayed_job worker and exit when all available jobs are complete" fullCmd="jobs:workoff" taksId="workoff" /><RakeTask description="" fullCmd="jobs:check" taksId="check" /><RakeTask description="" fullCmd="jobs:environment_options" taksId="environment_options" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="log"><RakeTask description="Truncates all *.log files in log/ to zero bytes" fullCmd="log:clear" taksId="clear" /></RakeGroup><RakeTask description="Prints out your Rack middleware stack" fullCmd="middleware" taksId="middleware" /><RakeTask description="Enumerate all annotations (use notes:optimize, :fixme, :todo for focus)" fullCmd="notes" taksId="notes" /><RakeGroup description="" fullCmd="" taksId="notes"><RakeTask description="Enumerate a custom annotation, specify with ANNOTATION=CUSTOM" fullCmd="notes:custom" taksId="custom" /><RakeTask description="" fullCmd="notes:fixme" taksId="fixme" /><RakeTask description="" fullCmd="notes:optimize" taksId="optimize" /><RakeTask description="" fullCmd="notes:todo" taksId="todo" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="rails"><RakeTask description="Applies the template supplied by LOCATION=(/path/to/template) or URL" fullCmd="rails:template" taksId="template" /><RakeTask description="Update both configs and public/javascripts from Rails (or use just update:javascripts or update:configs)" fullCmd="rails:update" taksId="update" /><RakeGroup description="" fullCmd="" taksId="upgrade"><RakeTask description="Backs up your likely modified files so you can run the Rails 3 generator on your app with little risk" fullCmd="rails:upgrade:backup" taksId="backup" /><RakeTask description="Runs a battery of checks on your Rails 2.x app and generates a report on required upgrades for Rails 3" fullCmd="rails:upgrade:check" taksId="check" /><RakeTask description="Extracts your configuration code so you can create a new config/application.rb" fullCmd="rails:upgrade:configuration" taksId="configuration" /><RakeTask description="Generates a Gemfile for your Rails 3 app out of your config.gem directives" fullCmd="rails:upgrade:gems" taksId="gems" /><RakeTask description="Create a new, upgraded route file from your current routes.rb" fullCmd="rails:upgrade:routes" taksId="routes" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="freeze"><RakeTask description="" fullCmd="rails:freeze:edge" taksId="edge" /><RakeTask description="" fullCmd="rails:freeze:gems" taksId="gems" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="templates"><RakeTask description="" fullCmd="rails:templates:copy" taksId="copy" /></RakeGroup><RakeTask description="" fullCmd="rails:unfreeze" taksId="unfreeze" /><RakeGroup description="" fullCmd="" taksId="update"><RakeTask description="" fullCmd="rails:update:application_controller" taksId="application_controller" /><RakeTask description="" fullCmd="rails:update:configs" taksId="configs" /><RakeTask description="" fullCmd="rails:update:javascripts" taksId="javascripts" /><RakeTask description="" fullCmd="rails:update:scripts" taksId="scripts" /></RakeGroup></RakeGroup><RakeTask description="Print out all defined routes in match order, with names" fullCmd="routes" taksId="routes" /><RakeTask description="Generate a cryptographically secure secret key (this is typically used to generate a secret for cookie sessions)" fullCmd="secret" taksId="secret" /><RakeTask description="Send email reminders to all students with upcoming assignment deadlines" fullCmd="send_email_reminders" taksId="send_email_reminders" /><RakeTask description="Report code statistics (KLOCs, etc) from the application" fullCmd="stats" taksId="stats" /><RakeTask description="Runs test:units, test:functionals, test:integration together (also available: test:benchmark, test:profile, test:plugins)" fullCmd="test" taksId="test" /><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="Run tests for {:recent=&gt;&quot;test:prepare&quot;} / Test recent changes" fullCmd="test:recent" taksId="recent" /><RakeTask description="Run tests for {:uncommitted=&gt;&quot;test:prepare&quot;} / Test changes since last checkin (only Subversion and Git)" fullCmd="test:uncommitted" taksId="uncommitted" /><RakeTask description="" fullCmd="test:benchmark" taksId="benchmark" /><RakeTask description="" fullCmd="test:functionals" taksId="functionals" /><RakeTask description="" fullCmd="test:integration" taksId="integration" /><RakeTask description="" fullCmd="test:plugins" taksId="plugins" /><RakeTask description="" fullCmd="test:prepare" taksId="prepare" /><RakeTask description="" fullCmd="test:profile" taksId="profile" /><RakeTask description="" fullCmd="test:units" taksId="units" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="time"><RakeGroup description="" fullCmd="" taksId="zones"><RakeTask description="Displays all time zones, also available: time:zones:us, time:zones:local -- filter with OFFSET parameter, e.g., OFFSET=-6" fullCmd="time:zones:all" taksId="all" /><RakeTask description="" fullCmd="time:zones:local" taksId="local" /><RakeTask description="" fullCmd="time:zones:us" taksId="us" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="tmp"><RakeTask description="Clear session, cache, and socket files from tmp/ (narrow w/ tmp:sessions:clear, tmp:cache:clear, tmp:sockets:clear)" fullCmd="tmp:clear" taksId="clear" /><RakeTask description="Creates tmp directories for sessions, cache, sockets, and pids" fullCmd="tmp:create" taksId="create" /><RakeGroup description="" fullCmd="" taksId="cache"><RakeTask description="" fullCmd="tmp:cache:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="pids"><RakeTask description="" fullCmd="tmp:pids:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="sessions"><RakeTask description="" fullCmd="tmp:sessions:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="sockets"><RakeTask description="" fullCmd="tmp:sockets:clear" taksId="clear" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="upg_rails_2_2"><RakeTask description="Checks Expertiza and warns you if you are using deprecated code" fullCmd="upg_rails_2_2:deprecated" taksId="deprecated" /><RakeTask description="Renames (with SVN) all .rhtml views to .html.erb, .rjs to .js.rjs, .rxml to .xml.builder, and .haml to .html.haml" fullCmd="upg_rails_2_2:svn_rename" taksId="svn_rename" /><RakeTask description="Fixes the files that have deprecated code" fullCmd="upg_rails_2_2:update_deprecated_code" taksId="update_deprecated_code" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="utils"><RakeTask description="Modify a ruby source code file to enforce the ruby coding style" fullCmd="utils:rbeautify[file_name]" taksId="rbeautify[file_name]" /><RakeTask description="" fullCmd="utils:rbeautify" taksId="rbeautify" /></RakeGroup><RakeTask description="" fullCmd="default" taksId="default" /><RakeTask description="" fullCmd="doc" taksId="doc" /><RakeTask description="" fullCmd="doc/api" taksId="doc/api" /><RakeTask description="" fullCmd="doc/api/index.html" taksId="doc/api/index.html" /><RakeTask description="" fullCmd="doc/app" taksId="doc/app" /><RakeTask description="" fullCmd="doc/app/index.html" taksId="doc/app/index.html" /><RakeTask description="" fullCmd="environment" taksId="environment" /><RakeTask description="" fullCmd="features" taksId="features" /><RakeTask description="" fullCmd="rails_env" taksId="rails_env" /></RakeGroup></Settings>
