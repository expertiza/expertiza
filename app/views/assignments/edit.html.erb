<h1>Editing Assignment: <%=@assignment_form.assignment.name%></h1>


  <%= form_for @assignment_form.assignment, html: { id: 'assignment_form' } do %>
    <div class= "table" id="tabs">
      <ul>
        <li><a href="#tabs-1" id="General">General</a></li>
        <li id="topics_tab_header"><a href="#tabs-2" id="Topics">Topics</a></li>
        <li><a href="#tabs-3" id="Rubrics">Rubrics</a></li>
        <li><a href="#tabs-4" id="ReviewStrategy">Review strategy</a></li>
        <li><a href="#tabs-5" id="DueDates">Due dates</a></li>
        <% if @assignment_form.assignment.is_calibrated %>
            <li><a href="#tabs-6" id="Calibration">Calibration</a></li>
        <% end %>
        <% if @assignment_form.assignment.badge? %>
          <li><a href="#tabs-7" id="Badges">Badges</a></li>
        <% end %>
        <li><a href="#tabs-8" id="Other">Other stuff</a></li>
      </ul>
      <div id="tabs-1">
        <%= render 'assignments/edit/general' %>
      </div>
      <div id="tabs-2">
        <%= render 'assignments/edit/topics' %>
      </div>
      <div id="tabs-3">
        <%= render 'assignments/edit/rubrics' %>
      </div>
      <div id="tabs-4">
        <%= render 'assignments/edit/review_strategy' %>
      </div>
      <div id="tabs-5">
        <%= render 'assignments/edit/due_dates' %>
      </div>
      <% if @assignment_form.assignment.is_calibrated %>
        <div id="tabs-6">
          <%= render 'assignments/edit/calibration' %>
        </div>
      <% end %>
      <% if @assignment_form.assignment.badge? %>
        <div id="tabs-7">
          <%= render 'assignments/edit/badges' %>
        </div>
      <% end %>
      <div id="tabs-8">
        <%= render 'assignments/edit/other' %>
      </div>
      <div style="margin-bottom: 20px">
      <%= button_tag "Save", :id => 'submit_btn', class: 'btn btn-md btn-default', :style => "margin-left: 20px;" %> | <%= render :partial => '/shared_scripts/back' %>
      </div>
    </div>
    <script>
      var useBookmarkChanged = function () {
          jQuery("#questionnaire_table_BookmarkRatingQuestionnaire").remove()
          var bookmark_checkbox = jQuery('#assignment_form_assignment_use_bookmark');
          if (bookmark_checkbox.is(':checked')) {
              <% assignment_questionnaire = @assignment_form.assignment_questionnaire('BookmarkRatingQuestionnaire', nil, nil) %>
              <% questionnaire = @assignment_form.questionnaire(assignment_questionnaire, 'BookmarkRatingQuestionnaire') %>
              addQuestionnaireTableRow(
                  'BookmarkRatingQuestionnaire',
                  <%= assignment_questionnaire.to_json.html_safe %>,
                  <%= questionnaire.to_json.html_safe %>,
                  <%= questionnaire_options('BookmarkRatingQuestionnaire').to_json.html_safe %>,
                  null
              );
          }
      }

      jQuery(document).ready(function () {
        jQuery("#submit_btn").click(function(e) {
          var max_team_size = jQuery('#assignment_form_assignment_max_team_size').val();
          if (max_team_size == '1' && jQuery('#team_assignment').is(':checked')) {
              alert("Maximum number of members per team must be greater than 1!");
              e.preventDefault()
          }
        })
        jQuery("#tabs").tabs({
          // Changing from one tab to another is sort of like a "save" action
          beforeActivate: function (event, ui) {
            var deleteTeam = 0;
            var frm = jQuery("#assignment_form");
            var max_team_size = jQuery('#assignment_form_assignment_max_team_size').val();
            if (max_team_size == '1' && jQuery('#team_assignment').is(':checked')) {
              deleteTeam = 1;
              alert("Maximum number of members per team must be greater than 1!");
            }
            if (deleteTeam == 0) {
              jQuery.ajax({
                url: frm.attr('action'),
                method: frm.attr('method'),
                data: frm.serialize(),
                success: function(data, textStatus, xhr){
                    // REFRESH the topics tab after changing tabs
                    // Specifically useful when switching between vary-do-not-vary by topic on the Rubrics tab
                    // This changes how the Topics tab should appear
                    // We only refresh the Topics tab if that is the tab we are switching to
                    // Followed instructions at:
                    // https://atlwendy.ghost.io/render-a-partial-view-tutorial-for-beginners/
                    if (ui.newPanel.attr('id') == 'tabs-2') {
                        jQuery("#tabs-2").html(data);
                    }
                    // TODO E1936 (future work)
                    // There is a noticeable delay between changing the state of the
                    // "Review rubric varies by topic?" checkbox on the Rubrics tab,
                    // and the show / hide of rubric drop-downs on the Topics tab
                },
              });
              // Update the flash messages onscreen
              // we are performing an action that could result in important info put in flash,
              // but we will not see this without requesting it explicitly because we don't do a full page re-load
              jQuery.ajax({
                  url: "/assignments/instant_flash",
                  method: "get",
                  data: "",
                  success: function(data, textStatus, xhr){
                      jQuery("#application-flash-div").html(data);
                  },
              });
            } else {
              event.preventDefault();
            }
          }
        });
        if (<%= params[:tab]=='tab3'%>) {
          $('#ReviewStrategy').click();
        }
      });

      $('#go_to_tabs2').click(function(){
        $('#Rubrics').click();
      });
    </script>
  <% end %>

  <br/>
