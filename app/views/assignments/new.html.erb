<h1>Create New Assignment</h1>


  <%= form_for @assignment_form.assignment, html: { id: 'assignment_form' } do %>
    <div class= "chart-table" id="tabs">
      <ul>
        <li><a href="#tabs-1" id="General">General</a></li>
        <li><a href="#tabs-2" id="Rubrics">Rubrics</a></li>
        <li><a href="#tabs-3" id="ReviewStrategy">Review strategy</a></li>
        <li><a href="#tabs-4" id="DueDates">Due dates</a></li>
        <%if @assignment_form.assignment.is_calibrated%>
            <li><a href="#tabs-5" id="Calibration">Calibration</a></li>
        <%end%>
      </ul>
      <div id="tabs-1">
        <%= render 'assignments/edit/general' %>
      </div>
      <div id="tabs-2">
        <%= render 'assignments/edit/rubrics' %>
      </div>
      <div id="tabs-3">
        <%= render 'assignments/edit/review_strategy' %>
      </div>
      <div id="tabs-4">
        <%= render 'assignments/edit/due_dates' %>
      </div>
      <%if @assignment_form.assignment.is_calibrated%>
        <div id="tabs-5">
          <%= render 'assignments/edit/calibration' %>
        </div>
      <%end%>
      <%= button_tag "Create", :id => 'submit_btn' %> | <%= render :partial => '/shared_scripts/back' %>
    </div>
    <script>
      var useBookmarkChanged = function () {
          jQuery("#questionnaire_table_BookmarkRatingQuestionnaire").remove()
          var bookmark_checkbox = jQuery('#assignment_form_assignment_use_bookmark');
          if (bookmark_checkbox.is(':checked')) {
            addQuestionnaireTableRow(
                    'BookmarkRatingQuestionnaire',
                    null,
                    <%= questionnaire(@assignment_form.assignment, 'BookmarkRatingQuestionnaire',nil).to_json.html_safe %>,
                    <%= assignment_questionnaire(@assignment_form.assignment, 'BookmarkRatingQuestionnaire',nil).to_json.html_safe %>,
                    <%= questionnaire_options(@assignment_form.assignment, 'BookmarkRatingQuestionnaire',nil).to_json.html_safe %>
            );
          }
      }

      jQuery(document).ready(function () {
        jQuery("#submit_btn").click(function(e) {
          var max_team_size = jQuery('#assignment_form_assignment_max_team_size').val();
          if (max_team_size == '1' && jQuery('#team_assignment').is(':checked')) {
              alert("Maximum number of members per team must be greater than 1!");
              e.preventDefault()
          }
        })
        jQuery("#tabs").tabs({
          beforeActivate: function (event, ui) {
            var deleteTeam = 0;
            var frm = jQuery("#assignment_form");
            var max_team_size = jQuery('#assignment_form_assignment_max_team_size').val();
            if (max_team_size == '1' && jQuery('#team_assignment').is(':checked')) {
              deleteTeam = 1;
              alert("Maximum number of members per team must be greater than 1!");
            }
            if (deleteTeam == 0) {
              jQuery.ajax({
                url: frm.attr('action'),
                method: frm.attr('method'),
                data: frm.serialize(),
              })
            } else {
              event.preventDefault();
            }
          }
        });
        if (<%= params[:tab]=='tab3'%>) {
          $('#ReviewStrategy').click();
        }
      });

      $('#go_to_tabs2').click(function(){
        $('#Rubrics').click();
      });
    </script>
  <% end %>

  <br/>
  