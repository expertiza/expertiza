<% if rscore and rscore[:assessments].length > 0 %>

    <BR/>
    <!-- review table that appears upwards -->
    <%= render :partial => 'grades/review_table', :locals => {:ctrl => 'review', :caction => 'view_review', :symbol => "review".to_sym, :prefix => prefix, :assignment => participant.assignment, :reviews => rscore[:assessments], :collabel => "Review", :rowlabel => "Reviewer"} %>

    <HR/>

    <%= stylesheet_link_tag 'jquery-ui-timepicker-addon' %>
    <%= stylesheet_link_tag 'jquery-ui-1.10.3.custom.min' %>
    <script src="/javascripts/jquery-ui-1.10.3.custom.min.js"></script>
    <script src="/javascripts/jquery-ui-timepicker-addon.js"></script>

    <% colwidth = 7  %>

    <%= form_for @assignment, html: {id: 'review_form'} do %>

        <% review_questionnaire = @assignment.questionnaires.select { |x| x.display_type == 'Review' }
           @questionnaire = Questionnaire.find(review_questionnaire.first.id)      %>


        <% i = 1 %>
        <% questions = Question.find_all_by_questionnaire_id(@questionnaire.id)  %>
        <% questions.each {|question| %>
            <br>
            <font size=-1><b>  Question  <%= i %> :  <%= question.txt %> </b>  </font>
            <% i=i+1 %>

        <% } %>
        <br><br>

        <div id="reviewtabs">
          <table class="general" width="100%">

            <tr>
              <td></td>
              <% questions.each {|question| %>
                  <td align= "center"> <b> Question  <%= i %></b>  </td>
                  <% i=i+1 %>
              <% } %>
            </tr>
            <% j=1 %>

            <% for reviews in rscore[:assessments] %>
                <tr>
                  <td id="tab<%= j %>" align= "center"><i><b>Review <%= j %> </b><br></i><a href="#reviewtabs-<%= j %>"><u> show </u></a></td>
                  <% questions.each {|question| %>
                      <% score = Score.find_by_response_id_and_question_id(reviews.id, question.id)  %>
                      <td align="center">  <%= score.score %>    </td>
                  <% } %>

                  <% j=j+1 %>
                </tr>  <!-- make a new tab -->
            <% end %>


          </table>

          <% count = 0 %>
          <% for review in rscore[:assessments] %>
              <% review_feedback = nil %>

              <% count = count + 1 %>



              <% file_url = nil
                 review_questionnaire = @assignment.questionnaires.select { |x| x.display_type == 'Review' }
                 @questionnaire = Questionnaire.find(review_questionnaire.first.id)
                 if @questionnaire.section.eql? "Custom"
                   @current_folder = DisplayOption.new
                   @current_folder.name = ""
                   @participant = Participant.find(review.map.reviewer_id)
                   files_list = Dir[@participant.assignment.get_path.to_s + "/" + review.map.id.to_s + @current_folder.name + "/*"]
                   files = Array.new
                   for file in files_list
                     if File.directory?(file) then
                       dir_files = get_files(file)
                       dir_files.each { |f| files << f }
                     end
                     files << file
                   end
                   file = files[0]
                   file_url = ""
                   if !file.nil?
                     # parentFolder = File.dirname(file)
                     # location = parentFolder + File.basename(file)
                     file_url = ""
                     file_url = "<u><i> "
                     file_url += link_to File.basename(file), :controller => 'submitted_content', :action => 'download', :download => File.basename(file), 'current_folder[name]' => File.dirname(file)
                     file_url += " </i></u><br/>"
                   end
                 end
              %>

              <% if controller.action_name != "view_my_scores" %>
                  <a name="<%= prefix+"_"+review.map.reviewer.name %>"></a><%= review.display_as_html(prefix) %>
                  <% if @questionnaire.section.eql? "Custom" %>
                      <%= render :partial => 'questionnaire', :locals => {:file_url => file_url, :review => review} %>
                  <% end %>
              <% else %>
                  <% if @questionnaire.section.eql? "Custom" %>

                      <div id="reviewtabs-<%= count %>">


                        <h2>Review <%= count %></h2>
                        <!-- Display the latest review first -->
                        <a name="<%= prefix+"_"+review.map.reviewer.name %>"></a>
                        <%= review.display_as_html(prefix, count) %>
                        <%= render :partial => 'questionnaire', :locals => {:file_url => file_url, :review => review} %>
                        <!-- get all previous versions -->
                        <% @sorted_array=Array.new %>
                        <% @prev=Response.all %>
                        <% for element in @prev %>
                            <% if (element.map_id==review.map.id) %>
                                <% array_not_empty=1 %>
                                <% @sorted_array << element %>
                            <% end %>
                        <% end %>
                        <% @sorted=@sorted_array.sort { |m1, m2| (m1.version_num and m2.version_num) ? m2.version_num <=> m1.version_num : (m1.version_num ? -1 : 1) } %>
                        <% if (@sorted.size>1) %>
                            <h3>Previous versions</h3>
                            <% for i in 1..@sorted.size-1 %>
                                <% @str = @sorted[i].id.to_s %>
                                <!-- display previous versions in descending order -->
                                <a name="<%= prefix+"_"+review.map.reviewer.name %>"></a>
                                <%= @sorted[i].display_as_html(prefix, count) %>
                                <%= render :partial => 'questionnaire', :locals => {:file_url => file_url, :review => review} %>
                                <br/>
                                <script>
                                    toggleElement('reviews_<%=@str%>', 'review');
                                </script>
                            <% end %>
                            <!-- keep only latest version open -->
                            <% for i in 1..@sorted.size-1 %>
                                <% @str = @sorted[i].id.to_s %>
                                <script>
                                    toggleElement('review_<%=@str%>', 'review')
                                </script>
                            <% end %>
                        <% end %>
                        <% map = FeedbackResponseMap.find_by_reviewed_object_id(review.id)
                           review_feedback = map.try :response %>
                        <% if review_feedback %>
                            <%= link_to "View", :controller => 'response', :action => 'view', :id => review_feedback.id %>
                            or
                            <%= link_to "Edit", :controller => 'response', :action => 'edit', :id => review_feedback.id, :return => "feedback" %>
                            feedback for Review <%= count %>
                        <% else %>
                            <%= link_to "Give feedback", :controller => 'response', :action => 'new_feedback', :id => review.id %>
                            for Review <%= count %>
                        <% end %>


                      </div>

                  <% else %>

                      <div id="reviewtabs-<%= count %>">

                        <h2>Review <%= count %></h2>
                        <!-- Display the latest review first -->
                        <%= review.display_as_html(nil, review.version_num, file_url) %>
                        <BR/><BR/>
                        <!-- get all previous versions -->
                        <% @sorted_array=Array.new %>
                        <% @prev=Response.all %>
                        <% for element in @prev %>
                            <% if (element.map_id==review.map.id) %>
                                <% array_not_empty=1 %>
                                <% @sorted_array << element %>
                            <% end %>
                        <% end %>
                        <% @sorted=@sorted_array.sort { |m1, m2| (m1.version_num and m2.version_num) ? m2.version_num <=> m1.version_num : (m1.version_num ? -1 : 1) } %>
                        <% if (@sorted.size>1) %>
                            <% for i in 1..@sorted.size-1 %>
                                <% @str = @sorted[i].id.to_s %>
                                <!-- display previous versions in descending order -->
                                <%= @sorted[i].display_as_html(nil, @sorted[i].version_num, file_url) %>
                                <br/>
                                <script>
                                    toggleElement('reviews_<%=@str%>', 'review');
                                </script>
                            <% end %>
                            <!-- keep only latest version open -->
                            <% for i in 1..@sorted.size-1 %>
                                <% @str = @sorted[i].id.to_s %>
                                <script>
                                    toggleElement('review_<%=@str%>', 'review')
                                </script>
                            <% end %>
                        <% end %>
                        <% map = FeedbackResponseMap.find_by_reviewed_object_id(review.id)
                           review_feedback = map.try :response %>
                        <% if review_feedback %>
                            <%= link_to "View", :controller => 'response', :action => 'view', :id => review_feedback.id %>
                            or
                            <%= link_to "Edit", :controller => 'response', :action => 'edit', :id => review_feedback.id, :return => "feedback" %>
                            feedback for Review <%= count %>
                        <% else %>
                            <%= link_to "Give feedback", :controller => 'response', :action => 'new_feedback', :id => review.id %>
                            for Review <%= count %>
                        <% end %>

                      </div>
                  <% end %>
              <% end %>

          <% end %>

        </div>
        <script>
            jQuery(document).ready(function () {
                jQuery("#reviewtabs").tabs();
            });
        </script>

    <% end %>

<% else %>
    <i>No reviews have been completed for this user's submissions.</i>
<% end %>

