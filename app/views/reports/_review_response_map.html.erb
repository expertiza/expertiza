<!-- Set the review data and row span for each reviewer -->
    <% sort_reviewer_by_review_volume_desc.each_with_index do |reviewer, index| %>
      <% @response_maps, @rspan = review_report_data(@id, reviewer.id, @type) %>
      <tr>
        <% unless reviewer.id == 1 %>
          <% user = Participant.find(reviewer.id).user %>
            <!--reviewer-->
			
			<!-- added class attribute and span tag to extract full name and unityID of the user for scraping (Used in export to CSV functionality) -->
            <td>
              <%= index + 1 %>.
              <%= link_to user.name(session[:ip]), impersonate_impersonate_path(:user => {:name => user.name(session[:ip])}), :method => :post, :class => "user_unityID" %>
              (<span class="user_name"><%= user.fullname(session[:ip]) %></span>)
            </td>
            <!--# reviews done-->
            <td align = 'left'>
              <% (1..@assignment.num_review_rounds).each do |round| %>
                <%= instance_variable_get("@review_in_round_" + round.to_s) %>/<%= @rspan %>
                <%= ', ' unless round == @assignment.num_review_rounds %>
              <% end %>
              <%= link_to "summary", {:controller => 'popup', :action => 'view_review_scores_popup', :reviewer_id => reviewer.id, :assignment_id=>@id}, target: :_blank %>
            </td>
          <!--Team reviewed / Author feedback-->
          <td align = 'left'>
          <% @response_maps.each_with_index do |reviewer_map, index| %>
            <!--For assignments with team member 1, team reviewed column should show username instead of team name, which is randomly generated.-->
            <% team_name_color = get_team_color(reviewer_map) %>
            <% team_reviewed_link_name = reviewed_link_name_for_team(@assignment.max_team_size, reviewer_map.response, reviewer_map.reviewee_id, session[:ip]) %>
              <% if Team.where(id: reviewer_map.reviewee_id).length > 0 %>
                <!--Team reviewed-->
                <% if index == 0 %>
                        <% if Response.exists?(map_id: reviewer_map.id) %>
                            <div id = <%= team_name_color %>>&#10004;
                        <% else %>
                          <div id= <%= team_name_color %>>
                        <% end %>
                <% else %>
                        <% if Response.exists?(map_id: reviewer_map.id) %>
                            <div id = <%= team_name_color %> style='border-top: solid; border-width: 1px;'>&#10004;
                        <% else %>
                            <div id = <%= team_name_color %> style='border-top: solid; border-width: 1px;'>
                        <% end %>
                <% end %>
                    <%= link_to team_reviewed_link_name, :controller => 'popup', :action => 'team_users_popup', :id => reviewer_map.reviewee_id, :id2 => reviewer_map.id, :assignment_id=>@id %>
                    <%= list_review_submissions(reviewer.id, reviewer_map.reviewee_id, reviewer_map.id) %>
                    <!--Hard-coded Dr.Kidd's question in order to display link.-->
                    <!--later we can create a hyperlink question type to deal with this situation.-->
                    <%= list_hyperlink_submission(reviewer_map.id, 5386) if Assignment.find_by(id: @id.to_i).try(:course).try(:instructor).try(:name) == 'Jkidd' %>
                  </div>
                </div>
              <% end %>
            <% end %>
          </td>
          <!--Render partial view corresponding to the overall score awarded to a team-->
          <td align='left'>
            <% @response_maps.each_with_index do |reviewer_map, index| %>
              <% if Team.where(id: reviewer_map.reviewee_id).length > 0 %>
                <% @team = Team.find(reviewer_map.reviewee_id) %>
                <%= render partial: 'team_score_score_awarded', locals: {bgcolor: @bgcolor, team_id: @team.id, reviewer_id: reviewer.id} %>
              <% end %>
            <% end %>
          </td>         
          <!--Render partial view corresponding to the average score awarded to a team-->
          <td align='left'>
            <% @response_maps.each_with_index do |reviewer_map, index| %>
              <% if Team.where(id: reviewer_map.reviewee_id).length > 0 %>
                <% @team = Team.find(reviewer_map.reviewee_id) %>
                <%= render partial: 'team_score', locals: {bgcolor: @bgcolor, team_id: @team.id, reviewer_id: reviewer.id} %>
              <% end %>
            <% end %>
          </td>
          <!--Metrics-->
          <td align='left'>
            <%= display_volume_metric_chart(reviewer) %>
          </td>
          <!--Assign grade and write comments-->
          <td align='left'>
            <%= form_with model: reviewer.review_grade, url: save_grade_and_comment_for_reviewer_review_mapping_index_path, method: 'post' do |form| %>
              <%= form.hidden_field :participant_id, :value => reviewer.id %>
              <%= form.hidden_field :assignment_id, :value => @id %>
              <%= form.number_field :grade_for_reviewer, :value => reviewer.review_grade.try(:grade_for_reviewer), min: 0, max: 100, maxlength: 3, size: 3, placeholder: 'Grade' %>
              <br/>
              <%= form.text_area :comment_for_reviewer, :value => reviewer.review_grade.try(:comment_for_reviewer), placeholder: 'Comment', class: "awesome_input", 'data-multiple' => '', 'data-minchars' => "1" %>
              <table class="inline-transparent">
                <tr>
                  <td>
                    <%= image_tag 'text_macro.png', :border => 2, :title => 'Text Macro/Pastebin', :style => 'width: 24px; height:30px', :onclick => 'show_text_macros()' %>
                  </td>
                </tr>
                <tr>
                  <td>
                    <%= form.submit 'Save' %>
                  </td>
                </tr>
              </table>
            <% end %>
          </td>
        <% end %>
      </tr>
    <% end %>