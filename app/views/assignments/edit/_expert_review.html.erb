<h3>Submit reviews for calibration</h3>
<% assignment = @assignment_form.assignment %>
<% teams = assignment.teams %>

  <table width="100%" cellspacing="0" cellpadding="2" border="1">
    <tr bgcolor="#CCCCCC">
          <th width = "38%">
            Participant name
          </th>
          <th width = "15%">
            Action
          </th>
          <th>
            Submitted item(s)
          </th>
    </tr>

    <% teams.each do |team| %>
        <tr>
          <% teams_users = TeamsUser.where(team_id: team.id) %>
          <% users_for_curr_team = "" %>
          <% teams_users.each do |teams_user| %>
              <% user = User.find(teams_user.user_id) %>
              <% users_for_curr_team += user.name + ' (' + user.fullname + ')' + '<br/>' %>
              <% participants = Array.new %>
              <% participants << Participant.where(["parent_id = ? AND user_id = ?", assignment.id, user.id]).first %>
          <% end %>
          <td>
            <%= users_for_curr_team.html_safe %>
          </td>
          <td>
            <% assignment = Assignment.find(params[:id]) rescue nil %>
            <% instructor= Participant.where(parent_id: params[:id], user_id: session[:user].id).first %>
            <% map = ReviewResponseMap.where(reviewed_object_id: params[:id], reviewer_id: instructor.id, reviewee_id: team.id, calibrate_to: true).first rescue nil %>
            <% course = assignment.course   %>
            <% topic_id = SignedUpTeam.find_user_signup_topics(assignment.id, team.id) %>

            <!--Only the instructor of this assignment can do the expert peer-review-->
            <!--Other teaching staff of this assignment can only view the expert peer-review-->

            <% if !map.nil? and !map.response.empty? %>
                <% array_not_empty = 0 %>
                <% @sorted_responses = Array.new %>
                <% @prev = Response.where(:map_id => map.id) %>
                <% for element in @prev %>
                    <% array_not_empty = 1 %>
                    <% @sorted_responses << element %>
                <% end %>

                <% if (array_not_empty == 1) %>
                    <% @sorted_responses = @sorted_responses.sort_by {|obj| obj.updated_at} # the latest should be at the last%>
                    <% @latest_response = @sorted_responses.last %>

                    <%if @latest_response.round.nil?%>
                        <% last_response_round = AssignmentDueDate.done_in_assignment_round(@assignment.id,@latest_response) %>
                    <%else%>
                        <% last_response_round = @latest_response.round %>
                    <%end%>

                    <% current_round = @assignment.number_of_current_round(topic_id) %>


                    <%= link_to "View", {:controller => 'response', :action => 'view', :id => @latest_response.id} %>


                  <% if @assignment.get_current_stage(topic_id) != "Finished" %>
                      <%- # show the link as edit when latest review is done in current deadline   -%>
                      <%- # show link as update when latest review is done in different deadline than current phase   -%>
                      <% if (last_response_round == current_round)%>
                            <% if (!@latest_response.is_submitted) %>
                                <%= link_to "Edit", {:controller => 'response', :action => 'edit', :id => @latest_response.id} %>
                            <%end%>
                      <% else %>
                            <%= link_to "Update", {:controller => 'response', :action => 'new', :id => map.map_id} %></td>
                      <% end %>
                  <% end %>
              <%end%>
          <% elsif @assignment.get_current_stage(topic_id) != "Complete" && @assignment.can_review(topic_id) %>
                <%= link_to "Begin", {:controller => 'review_mapping', :action => 'add_calibration', :id => assignment.id, :team_id => team.id} %>              &nbsp;&nbsp;
          <% else %>
              Begin
               (Work has not yet been submitted) for
                <% review_no += 1 %>        map
          <% end %>


          </td>
          <td>
            <!--Display submitted hyperlinks-->
            <% participant = team.participants.first %>
            <% if !participant.nil? and !participant.team.hyperlinks.empty? %>
                <%= "Hyperlinks:<br/>".html_safe %>
                <% participant.team.hyperlinks.each do |link| %>
                    <a href="<%= link %>" target="_blank"><%= link %></a><br/>
                <% end %>
            <% end %>

            <!--Display submitted files-->
            <% if !participant.nil? and !participant.team.submitted_files.empty? %>
                <% files = participant.team.submitted_files %>
                <%= "Files:".html_safe %>
                <% if files and files.length > 0 %>
                    <%= display_directory_tree(participant, files, true).html_safe %>
                <% end %>
            <% end %>

          </td>
        </tr>
    <% end %>
  </table>