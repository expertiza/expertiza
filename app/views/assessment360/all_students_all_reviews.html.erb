<style>
  th, td {
    text-align: center;
}

  /* used to toggle visibility of columns */
  .visibility {
    display: none
  }
</style>

  <p><b>Hide/Unhide Columns:</b></p>
  <input type="checkbox" value="show-hide" checked="checked" id="meta-review-box"> Metareview &emsp;&emsp;
  <input type="checkbox" value="show-hide" checked="checked" id="teammate-review-box"> Teammate review
  <br>
  <br>
  <table class="table table-striped">
    <tr>
      <th rowspan=2 width="320">Students</th>
      <th rowspan=2 width="30">Teammate Count</th>
      <% @assignments.each do |assignment| %>
        <!-- check if at least one column is not nil for particular assignment  -->
        <% if !@teammate_review_exist[assignment.id].nil? || !@meta_review_exist[assignment.id].nil? %>
          <!-- total colspan is calculated as sum of assignment_columns for all columns -->
          <th colspan="<%= @assignment_columns[assignment.id]["meta_review"] + @assignment_columns[assignment.id]["teammate_review"] %>" width="300" class="assignment-header" id="<%= assignment.id %>"> <%= assignment.name %> </th>
        <% end %>
      <% end %>
      <th colspan="2" width="300" id="aggregate-score-header">Aggregate Score</th>
    </tr>
    <tr>
      <% @assignments.each do |assignment| %>
        <!-- header is hidden or visible based on the check for existence of data -->
        <% if !@meta_review_exist[assignment.id].nil? %> <td class="metaReviews" id="metaReviews-<%= assignment.id %>"><b>Metareviews</b></td> <% end %>
        <% if !@teammate_review_exist[assignment.id].nil? %> <td class="teammateReviews" id="teammateReviews-<%= assignment.id %>"><b>Teammate Reviews</b></td> <% end %>
      <% end %>
      <td class="metaReviews"><b>Metareviews</b></td>
      <td class="teammateReviews"><b>Teammate Reviews</b></td>
    </tr>

    <% @course_participants.each do |cp|%>
        <tr>
            <td align="center"><%= "#{cp.name(session[:ip])} (#{cp.fullname(session[:ip])})" %> </td>
            <td><%= @team_members_count[cp.id] %></td>
            <% @assignments.each do |assignment|%>
                <!-- value is hidden or visible based on the check for existence of data -->
                <% if !@meta_review_exist[assignment.id].nil? %> <td class="metaReviews"><%= format_score(@meta_review[cp.id][assignment.id]) unless @meta_review.nil? %></td> <% end %>
                <% if !@teammate_review_exist[assignment.id].nil? %> <td class="teammateReviews"><%= format_score(@teammate_review[cp.id][assignment.id]) unless @teammate_review.nil? %></td> <% end %>
            <% end%>
            <td class="metaReviews"><%= format_score(@meta_review[cp.id][:avg_grade_for_assgt]) unless @meta_review.nil? || @meta_review[cp.id].nil? %></td>
            <td class="teammateReviews"><%= format_score(@teammate_review[cp.id][:avg_grade_for_assgt]) unless @teammate_review.nil? || @teammate_review[cp.id].nil?%></td>
        </tr>
    <%end%>
        <tr>
            <td><b>Class Average</b></td>
            <td></td>
            <% @assignments.each do |assignment|%>
                <!-- value is hidden or visible based on the check for existence of data -->
                <% if !@meta_review_exist[assignment.id].nil? %> <td class="metaReviews"><%= "#{@overall_meta_review_grades[assignment.id] / @overall_meta_review_count[assignment.id]}%" %></td> <% end %>
                <% if !@teammate_review_exist[assignment.id].nil? %> <td class="teammateReviews"><%= "#{@overall_teammate_review_grades[assignment.id] / @overall_teammate_review_count[assignment.id]}%" %></td> <% end %>
            <% end%>
            <% total_meta_review_grade = @overall_meta_review_grades.inject(0) {|sum, (k, v)| sum + v } %>
            <% total_meta_review_count = @overall_meta_review_count.inject(0) {|sum, (k, v)| sum + v } %>
            <td class="metaReviews">
              <%= total_meta_review_count.zero? ? "N/A" : 
              "#{total_meta_review_grade / total_meta_review_count}%" %>
            </td>
            <% total_teammate_review_grade = @overall_teammate_review_grades.inject(0) {|sum, (k, v)| sum + v } %>
            <% total_teammate_review_count = @overall_teammate_review_count.inject(0) {|sum, (k, v)| sum + v } %>
            <td class="teammateReviews">
              <%= total_meta_review_count.zero? ? "N/A" : 
              "#{total_teammate_review_grade / total_teammate_review_count}%" %>    
            </td>
        </tr>
    </table>
</div>

<script>
// get all the elements that are related to meta reviews
const metaReviewClasses = document.querySelectorAll('.metaReviews');
// get all the elements that are related to teammate reviews
const teammateReviewClasses = document.querySelectorAll('.teammateReviews');

// get aggregate score header element to dynamically vary colspan
aggregateScoreHeader = document.getElementById("aggregate-score-header");
aggregateScoreColSpan = 2;
// get all assignment headers to dynamically vary colspan
assignmentHeaderClasses = document.querySelectorAll(".assignment-header");

// when meta review checkbox is changed
metaReviewCheckBox = document.getElementById('meta-review-box');
metaReviewCheckBox.addEventListener('change', function() {
  // colspan is calculated and updated for that aggregate score header
  this.checked ? aggregateScoreColSpan += 1 : aggregateScoreColSpan -= 1;
  aggregateScoreHeader.setAttribute("colspan", aggregateScoreColSpan);
  // all elements related to meta reviews are made visible/hidden
  metaReviewClasses.forEach(el => {
        el.classList.toggle('visibility');
        })
  // colspan is calculated and updated for that particular assignment
  assignmentHeaderClasses.forEach(el => {
        assignmentColSpan = Number(el.getAttribute("colspan"));
        this.checked ? assignmentColSpan += 1 : assignmentColSpan -= 1;
        var element =  document.getElementById('metaReviews-'+el.id);
        if (typeof(element) != 'undefined' && element != null){
          el.setAttribute("colspan", assignmentColSpan);
          if (assignmentColSpan > 0){
            el.style.display = null;
          }
          else {
            el.style.display = "none";
          }
        }
        })
});

// when teammate review checkbox is changed
teammateReviewCheckBox = document.getElementById('teammate-review-box');
teammateReviewCheckBox.addEventListener('change', function() {
  // colspan is calculated and updated for that aggregate score header
  this.checked ? aggregateScoreColSpan += 1 : aggregateScoreColSpan -= 1;
  aggregateScoreHeader.setAttribute("colspan", aggregateScoreColSpan);
  // all elements related to meta reviews are made visible/hidden
  teammateReviewClasses.forEach(el => {
        el.classList.toggle('visibility');
        })
  // colspan is calculated and updated for that particular assignment
  assignmentHeaderClasses.forEach(el => {
        assignmentColSpan = Number(el.getAttribute("colspan"));
        this.checked ? assignmentColSpan += 1 : assignmentColSpan -= 1;
        var element =  document.getElementById('teammateReviews-'+el.id);
        if (typeof(element) != 'undefined' && element != null){
          el.setAttribute("colspan", assignmentColSpan);
          if (assignmentColSpan > 0){
            el.style.display = null;
          }
          else {
            el.style.display = "none";
          }
        }
        })
});
</script>