<!DOCTYPE html>
<html>
<head>
    <title>Convert JSON Data to HTML Table</title>
    <style>
        th, td, p, input, h3 {
            font:15px 'Segoe UI';
        }
        table, th, td {
            border: solid 1px #ddd;
            border-collapse: collapse;
            padding: 2px 3px;
            text-align: center;
        }
        th {
            font-weight:bold;
        }
    </style>
</head>
<body>
<br>
	<h3>
    	Click the button to create a dynamic table using data extracted from a JSON array.
    </h3>
    <br>
    <input type='button' onclick='tableFromJson()' 
    	value='Generate review metric' />
        
    <p id='showData'></p>
<br>
    <div id='timeTaken'></div>

    
   
</body>

<script  src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
 <script>

        var final_json;
        var response_general = null;
       
        
       function makeRequest(final_json,url) {
               return new Promise(function (resolve, reject) {
                    let xhr = new XMLHttpRequest();
                    xhr.open('POST', url);
                    xhr.setRequestHeader('content-type', 'application/json');
                    xhr.onload = function () {
                        if (this.status >= 200 && this.status < 300) {
                            resolve(xhr.response);
                           
                            response_general = xhr.response;
                            //console.log(xhr.response);
                        } else {
                            reject({
                                status: this.status,
                                statusText: xhr.statusText
                            });
                        }
                    };
                    xhr.onerror = function () {
                        reject({
                            status: this.status,
                            statusText: xhr.statusText
                        });
                    };
                    xhr.send(final_json);
                });

            }



         async function tableFromJson() 
        {
            var t0 = performance.now();

            var de = $("form").serialize();      
            $("#d").text($("form").serialize());

         
            var myBooks = [Object.fromEntries(new URLSearchParams(de))]
            console.log(myBooks[0]);
            var j = 0;
            for(j =0; j <1000; j++)
            {
                if (document.getElementById("responses_"+j+"_comments") == null)
                {break;}

            }
            console.log("value of j");
            console.log(j);



            var obj = new Object();           
            var jsonString = "";

            var id = 0;
            var reviews = [];

           for (var i =2; i < (j); i++) {              

                if (document.getElementById("responses_"+i+"_comments") == null)
                     continue;
                 else
                 {         

                    var dict = {};

                    dict["id"] = id;
                    var tem = (document.getElementById("responses_"+i+"_comments").value);
                   console.log(tem);
                  
                   tem =  $("<p>").html(tem).text();
                   tem = tem.replace("\n"," ");
                     dict["text"] = tem.replace("\r","");
                    id++;
                    reviews.push(dict);

                 }
           }

                        var dict = {};
                        dict["id"] = id;
                        var tem =  (document.getElementById("responses_"+0+"_comments").value);
                        tem =  $("<p>").html(tem).text();
                        tem = tem.replace("\n"," ");
                        dict["text"] = tem.replace("\r","");                        
                        id++;
                        reviews.push(dict);

                        dict = {};
                        dict["id"] = id;
                        tem = myBooks[0]['review[comments]'];
                        tem =  $("<p>").html(tem).text();
                        tem = tem.replace("\n"," ");
                        dict["text"] = tem.replace("\r","");                       
                        id++;
                        reviews.push(dict);                        

            console.log(reviews);

            var final_obj = {};

            final_obj["reviews"] = reviews;
                    
            final_json = JSON.stringify(final_obj);
          
     
           

//////////////////// **** Sentiment ********* //////////////////////////////   
        

            console.log("Now printing response_sentiment");

            console.log("**********");
            var promise_sentiment = await makeRequest(final_json, 'https://peerlogic.csc.ncsu.edu/sentiment/analyze_reviews_bulk')

           console.log("printing response_sentiment");
          var response_sentiment = JSON.parse(response_general);
           response_general = null;
           console.log(response_sentiment);
          
























        //     var response_sentiment = null;

        //      const xhr_sentiment = new XMLHttpRequest()
        //     xhr_sentiment.withCredentials = false

        //     xhr_sentiment.addEventListener('readystatechange', function() {
        //     if (this.readyState === this.DONE) {
        //  //       console.log(this.responseText)
        //     }
        //     })

        //     xhr_sentiment.open('POST', 'https://peerlogic.csc.ncsu.edu/sentiment/analyze_reviews_bulk')
        //     xhr_sentiment.setRequestHeader('content-type', 'application/json')

        //     response_sentiment =  xhr_sentiment.send(final_json)        
        //     console.log("Now printing response_sentiment");

        //     console.log(response_sentiment);      

            
            // var response_sentiment_promise = await sentimentProcess();
            // console.log(response_sentiment_promise);


        //  //  var response_sentiment = response_sentiment_promise;
         
        //     if(response_sentiment['sentiments'] === undefined)
        //         console.log("Its undefined");
        //     else      
        //          console.log(response_sentiment['sentiments']);

            // console.log("Now printing response_sentiment");
            // console.log(response_sentiment);  


//////////////////// **** Problem ********* //////////////////////////////   
        
       

        console.log("Now printing response_problem");

        console.log("**********");
        var promise_problem = await makeRequest(final_json, 'http://152.7.99.200:5000/problem')

        console.log("printing response_problem");
        var response_problem = JSON.parse(response_general);
        response_general = null;
        console.log(response_problem);
          







       
       
        //     var response_problem = null;

        //      const xhr_problem = new XMLHttpRequest()
        //     xhr_problem.withCredentials = false

        //     xhr_problem.addEventListener('readystatechange', function() {
        //     if (this.readyState === this.DONE) {
        // //        console.log(this.responseText)
        //     }
        //     })

        //     xhr_problem.open('POST', 'http://152.7.99.200:5000/problem')
        //     xhr_problem.setRequestHeader('content-type', 'application/json')

        //     response_problem =  xhr_problem.send(final_json)        
        // //    console.log("Now printing response_problem");

        //  //   console.log(response_problem);  

//////////////////// **** Suggestion ********* //////////////////////////////   
        
        console.log("Now printing response_suggestion");

        console.log("**********");
        var promise_suggestion = await makeRequest(final_json, 'http://152.7.99.200:5000/suggestions')

        console.log("printing response_suggestion");
        var response_suggestion = JSON.parse(response_general);
        response_general = null;
        console.log(response_suggestion);
          
       //     console.log("Now printing response_suggestion");

       //     console.log(response_suggestion);        

/////////////////////////////////////////////////////////////////////////////////////////////

            
            
         
             


            

         //   Object obj = new Object();
            var obj;
            var obj_id = 1;
            var pos; var neg; var neu;

            myBooks = [];
      //        console.log("*****1213213213213****");
      //      console.log(response_sentiment['sentiments']);

            for(var i =0; i<response_sentiment['sentiments'].length; i++)        
            {

                var dict_final = {};


            

              dict_final["response_id"] = i+1;

              pos = response_sentiment['sentiments'][i]['pos'];
              neg = response_sentiment['sentiments'][i]['neg'];
              neu = response_sentiment['sentiments'][i]['neu'];

              if ( pos > neg && pos > neu )
                dict_final["sentiment"] = 'positive'; 
              if ( neu > pos && neu > neg )
                dict_final["sentiment"] = 'neutral'; 
              if ( neg > neu && neg > pos )
                dict_final["sentiment"] = 'negative';    
              
              dict_final["suggestions"] = response_suggestion['reviews'][i]['suggestions']
              dict_final["problems"] = response_problem['reviews'][i]['problems'] 

           //   obj_id++; 

              myBooks.push(dict_final);              
            }

            

            console.log(myBooks);














////////////////////////////////////////////////////////////////////////////////
            // var temp = [];
            //  for (var i = 0; i < 6; i++) {
            //     temp.push(myBooks['0']['responses['+i+'][comment]']);

            //  }

            //  console.log(temp);

            // Extract value from table header. 
            // ('Book ID', 'Book Name', 'Category' and 'Price')

            var col = [];
            for (var i = 0; i < myBooks.length; i++) {
                for (var key in myBooks[i]) {
                    if (col.indexOf(key) === -1) {
                        col.push(key);
                    }
                }
            }

            // Create a table.
            var table = document.createElement("table");

            // Create table header row using the extracted headers above.
            var tr = table.insertRow(-1);                   // table row.

            for (var i = 0; i < col.length; i++) {
                var th = document.createElement("th");      // table header.
                th.innerHTML = col[i];
                tr.appendChild(th);
            }

            // add json data to the table as rows.
            for (var i = 0; i < myBooks.length; i++) {

                tr = table.insertRow(-1);

                for (var j = 0; j < col.length; j++) {
                    var tabCell = tr.insertCell(-1);
                    tabCell.innerHTML = myBooks[i][col[j]];
                }
            }

            // Now, add the newly created table with json data, to a container.
            var divShowData = document.getElementById('showData');
            divShowData.innerHTML = "";
            divShowData.appendChild(table);

            
            t1 = performance.now();

            var time = t1 - t0;
            
            var obj5 = document.getElementById('timeTaken');
            console.log("Printing Time taken ");
            console.log(obj5);
      //      obj.value = "Time Taken: "+time;

            obj5.innerHTML = `<p> Time taken is ${time/1000} seconds. </p>`;
            


        }
   
</script>
</html>