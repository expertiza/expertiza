<% current_folder = DisplayOption.new %>
<% current_folder.name = "" %>
<% if origin == 'review' %>
  <% files = participant.files(participant.review_file_path(response_map_id).to_s + current_folder.name) %>
<% else %>
  <% files = participant.team.files(participant.team.path.to_s + current_folder.name) %>
<%end%>

<%session_participant = AssignmentParticipant.where(parent_id: @assignment.id, user_id: session[:user].id).first%>
<%session_participants_team = AssignmentTeam.team(session_participant)%>
<%same_team_flag = false %>
<% if !session_participants_team.nil? and session_participants_team.includes? (participant) %>
  <%same_team_flag = true%>
<%end%>
<% if params[:controller] == 'submitted_content' %>
  or
<% end %>
<br/><br/>

<% if (files.length > 0 or stage != "Finished")  %>
  <% if same_team_flag && stage != "Finished" %>
    <h4>&#8226; Submit a file:</h4>
    <%= form_tag({:controller=>'submitted_content',:action=>'submit_file',:id => participant.id, :origin => origin ||= nil, :response_map_id => response_map_id ||= nil},{:method => 'post', :enctype => "multipart/form-data", :onSubmit => "return checkIfFileExists(uploaded_file.value,1);"}) do %>
      <!--<input type="checkbox" name="unzip" value=""/> Unzip submission-->
      <div class="form-group">
        <input type="file" id="uploaded_file" name="uploaded_file" size=40 />
      </div>
      <%= submit_tag 'Upload file', class: 'btn btn-default' %>
      <br/><br/>
    <% end %>
  <% end %>

  <%= form_tag({:controller=>'submitted_content',:action=>'folder_action', :id => participant.id, :origin => origin ||= nil}, {:multipart => true, id: 'folder-action-form'}) do %>
    <% if files.length > 0 and participant.team.directory_num != nil and participant.team.directory_num >= 0 %>
      <% if same_team_flag && stage != "Finished" %>
        <div style="padding-bottom:0.6em"><h5>File actions:</h5>
        <!--<input type="button" onclick="createNewFolder()"     value="Create new folder"    />
          <input type="button" onclick="copySelectedFile()"    value="Copy selected file"   />
          <input type="button" onclick="moveSelectedFile()"    value="Move selected file"   />
          <input type="button" onclick="renameFile()"          value="Rename selected file" />-->
          <input type="button" onclick="deleteSelectedFile();" value="Delete selected file" />
          <input type="reset" value="Reset">
        </div>
      <% end %>

      <table>
        <tr><td>&nbsp;</td><td><div id="1_myDiv"><%= display_directory_tree(participant, files, !same_team_flag).html_safe %> </div></td></tr>
      </table>
    <% end %>
  <% end %>

  <% if local_assigns[:submission_check] %>
    <script type="text/javascript">
        var supported_file_type = ["pdf", "txt", "doc", "ppt", "png", "jpg"];
        function ISODateString(date){
            function pad(num){return num<10? '0'+num: num;}
            return date.getUTCFullYear()+'-'
                + pad(date.getUTCMonth()+1) + '-'
                + pad(date.getUTCDate()) + ' '
                + pad(date.getUTCHours()) + ':'
                + pad(date.getUTCMinutes()) + ':'
                + pad(date.getUTCSeconds());
        }
        $(document).ready(function(){
            var map_id = <%= @map.id %>;
            var round = <%= @current_round %>;
            // var current_window_timer = null;
            var time_out_interval = 500; // in milliseconds
            var filesToUpdate = {};
            var windowsToClose = new Array();
            // startTimer();
            function timeoutAction(timeout_flag){
                if (timeout_flag) {
                    while (windowsToClose!=null && windowsToClose.length>0){
                        windowsToClose.shift().close();
                    }
                }
                restart_file_timing_flag = $("#restart_file_timing_flag").val()=='true';
                if (restart_file_timing_flag) {
                    for (file_name in filesToUpdate) {
                        if (filesToUpdate[file_name]){
                            startTime(map_id, round, file_name);
                        }
                    }
                    $("#restart_file_timing_flag").val('false');
                }
            }
            function startTime(map_id, round, link) {
                var t = new Date();
                $.ajax({
                    type: "POST",
                    url: '/submission_viewing_events/record_start_time',
                    data: $.param({submission_viewing_event:{map_id: map_id, round: round, link: link, start_at: ISODateString(t)}})
                });
            }
            function markEndTime() {
                var  t = new Date();
                $.ajax({
                    type: 'POST',
                    dataType: 'json',
                    async: false,
                    url: '/submission_viewing_events/mark_end_time',
                    data: $.param({
                        submission_viewing_event: {map_id: map_id, round: round, end_at: ISODateString(t)}
                    })
                });
            }
            $("#1_myDiv #file_table a.fileLink").click(function(event){
                event.preventDefault();
                var file_path = $(this).attr("href");
                var file_name = $(this).attr("download");
                var file_name_extension = file_name.split(".").pop();
                $("#restart_file_timing_flag").val("false");
                startTime(map_id, round, file_name);
                filesToUpdate[file_name] = true;
                var window_handler = null;
                var link_timer = null;

                if ($.inArray(file_name_extension, supported_file_type)>=0){
                    alert("Open file "+ file_name + " in new window to view it online.");
                    window_handler = window.open(file_path, "_blank");
                    windowsToClose.push(window_handler)
                    link_timer = setInterval(checkWindowStatus, time_out_interval);
                } else {
                    // var window_handler = window.open(file_name);
                    alert("Download file "+file_name + " to view it locally.");
                    // window.location.href = file_path;
                    window_handler = window.open(file_path, "_blank");
                    // link_timer = setInterval(checkWindowStatus, 1000);
                }
                function endTime(link){
                    var t = new Date();
                    $.ajax({
                        type: 'POST',
                        dataType: 'json',
                        async: false,
                        url: '/submission_viewing_events/record_end_time',
                        data: $.param({
                            submission_viewing_event: {map_id: map_id, round: round, link: link, end_at: ISODateString(t)}
                        })
                    });
                }
                function checkWindowStatus() {
                    timeout_flag = $('#timeout_flag').val()=='true';
                    if (window_handler.closed) {
                        endTime(file_name);
                        filesToUpdate[file_name] = false;
                        clearInterval(link_timer);
                    }
                    timeoutAction(timeout_flag);
                }
            })
        });
    </script>
  <% end %>
<% else %>
<!--No files have been submitted.-->
<% end %>