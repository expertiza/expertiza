 <!-- Defines the CSS styles for the HTML elements in the view. -->
<style>
  th, td {
    text-align: center;
  }
  .visibility {
    display: none
  }
</style>

<!--# Checkbox for Metareviews and Teammate Reviews -->
<b style="margin-bottom: 40px;">Select columns:</b>
<tr>
  <td>
    <label for="metareview"><b>Metareviews</b></label>
    <input type="checkbox" value="show-hide" checked="checked" id="metareviewbox">
  </td>
  <td>
    <label for="teammateReview"><b>Teammate Reviews</b></label>
    <input type="checkbox" value="show-hide" checked="checked" id="teammatereviewbox">
  </td>
</tr> 
<br> 
<br>

<!-- # Table to display the students' reviews -->
<table class="table table-striped">
  <tr>
    <th rowspan=2 width="160" class="sorter-true">Student Name</th>
      <th rowspan=2 width="160" class="sorter-true">Student ID</th>
    <th rowspan=2 width="30">Teammate Count</th>
    <% @assignments.each do |assignment| %>
      <% if !@teammate_review_exists[assignment.id].nil? || !@meta_review_exists[assignment.id].nil? %>
      <!-- # Assignment header with colspan for Metareviews and Teammate Reviews -->
        <th colspan="<%= @assignment_columns[assignment.id]["meta_review"] + @assignment_columns[assignment.id]["teammate_review"] %>" width="300" class="assignment-header" id="<%= assignment.id %>"> <%= assignment.name %> </th>
      <% end %>
    <% end %>
    <th colspan="2" width="300" id="aggregate-score-header">Aggregate Score</th>
  </tr>
  <tr>
    <% @assignments.each do |assignment| %>
      <!-- # Metareviews and Teammate Reviews columns -->
      <% if !@meta_review_exists[assignment.id].nil? %> <td class="metaReviews" id="metaReviews-<%= assignment.id %>"><b>Metareviews</b></td> <% end %>
      <% if !@teammate_review_exists[assignment.id].nil? %> <td class="teammateReviews" id="teammateReviews-<%= assignment.id %>"><b>Teammate Reviews</b></td> <% end %>
    <% end %>
    <td class="metaReviews"><b>Metareviews</b></td>
    <td class="teammateReviews"><b>Teammate Reviews</b></td>
  </tr>

  <!-- # Iterates through each course participant to display their reviews -->
  <% @course_participants.each do |cp|%>
    <tr>
        <td align="center"><%= cp.fullname(session[:ip]) %> </td>
            <td align="center"><%= cp.name(session[:ip]) %> </td>
            
        <td><%= @student_team_counts[cp.id] %></td>
        <% @assignments.each do |assignment|%>
        <!-- # Displays the Metareviews and Teammate Reviews for each course participant -->
            <% if !@meta_review_exists[assignment.id].nil? %> <td class="metaReviews"><%= format_score(@meta_review[cp.id][assignment.id]) unless @meta_review.nil? %></td> <% end %>
            <% if !@teammate_review_exists[assignment.id].nil? %> <td class="teammateReviews"><%= format_score(@teammate_review[cp.id][assignment.id]) unless @teammate_review.nil? %></td> <% end %>
        <% end%>
        <!-- # Displays the overall Metareviews and Teammate Reviews for each course participant  -->
        <td class="metaReviews"><%= format_score(@meta_review[cp.id][:avg_grade_for_assgt]) unless @meta_review.nil? || @meta_review[cp.id].nil? %></td>
        <td class="teammateReviews"><%= format_score(@teammate_review[cp.id][:avg_grade_for_assgt]) unless @teammate_review.nil? || @teammate_review[cp.id].nil?%></td>
    </tr>
  <%end%>
      <tr>
          <td><b>Class Average</b></td>
          <td></td>
          <% @assignments.each do |assignment|%>
            <% if !@meta_review_exists[assignment.id].nil? %> <td class="metaReviews"><%= "#{@overall_meta_review_grades[assignment.id] / @overall_meta_review_count[assignment.id]}%" %></td> <% end %>
            <% if !@teammate_review_exists[assignment.id].nil? %> <td class="teammateReviews"><%= "#{@overall_teammate_review_grades[assignment.id] / @overall_teammate_review_count[assignment.id]}%" %></td> <% end %>
        <% end%>
        <!-- # Displays the overall Metareviews and Teammate Reviews for the class average -->
          <% total_meta_review_grade = @overall_meta_review_grades.inject(0) {|sum, (k, v)| sum + v } %>
          <% total_meta_review_count = @overall_meta_review_count.inject(0) {|sum, (k, v)| sum + v } %>
          <td class="metaReviews">
            <%= total_meta_review_count.zero? ? "N/A" : 
            "#{total_meta_review_grade / total_meta_review_count}%" %>
          </td>
          <!-- # Displays the overall Metareviews and Teammate Reviews for the class average -->
          <% total_teammate_review_grade = @overall_teammate_review_grades.inject(0) {|sum, (k, v)| sum + v } %>
          <% total_teammate_review_count = @overall_teammate_review_count.inject(0) {|sum, (k, v)| sum + v } %>
          <td class="teammateReviews">
            <%= total_meta_review_count.zero? ? "N/A" : 
            "#{total_teammate_review_grade / total_teammate_review_count}%" %>    
          </td>
        </tr>
</table>


<script>
  const aggregateScoreHeader = document.getElementById("aggregate-score-header");
  let aggregateScoreColSpan = 2;
  const assignmentHeaderClasses = document.querySelectorAll(".assignment-header");
  // # Function to handle checkbox change
  function handleCheckboxChange(checkboxId, reviewClassesSelector, reviewPrefix) {
    const reviewClasses = document.querySelectorAll(reviewClassesSelector);
    const checkBox = document.getElementById(checkboxId);

    checkBox.addEventListener('change', function() {
      this.checked ? aggregateScoreColSpan += 1 : aggregateScoreColSpan -= 1; //# Update aggregate score colspan based on checkbox state
      aggregateScoreHeader.setAttribute("colspan", aggregateScoreColSpan);

      reviewClasses.forEach(el => { //#Toggle visibility of review classes
        el.classList.toggle('visibility');
      });
      
      //# Update assignment header colspan and visibility based on checkbox state
      assignmentHeaderClasses.forEach(el => {
        let assignmentColSpan = Number(el.getAttribute("colspan"));
        this.checked ? assignmentColSpan += 1 : assignmentColSpan -= 1; 
        const element =  document.getElementById(reviewPrefix + '-' + el.id);

        if (element){
          el.setAttribute("colspan", assignmentColSpan);
          el.style.display = assignmentColSpan <= 0 ? "none" : null;
        }
      });
    });
  }
  handleCheckboxChange('metareviewbox', '.metaReviews', 'metaReviews'); //#Call handleCheckboxChange for Metareviews checkbox
  handleCheckboxChange('teammatereviewbox', '.teammateReviews', 'teammateReviews'); //#Call handleCheckboxChange for Teammate Reviews checkbox
</script>