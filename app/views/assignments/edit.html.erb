<h1>Editing Assignment: <%=@assignment_form.assignment.name%></h1>


  <%= form_for @assignment_form.assignment, html: { id: 'assignment_form' } do %>
    <div class= "table" id="tabs">
      <ul>
        <li><a href="#tabs-1" id="General">General</a></li>
        <li id="topics_tab_header"><a href="#tabs-2" id="Topics">Topics</a></li>
        <li><a href="#tabs-3" id="Rubrics">Rubrics</a></li>
        <li><a href="#tabs-4" id="ReviewStrategy">Review strategy</a></li>
        <li><a href="#tabs-5" id="DueDates">Due dates</a></li>
        <% if @assignment_form.assignment.is_calibrated %>
            <li><a href="#tabs-6" id="Calibration">Calibration</a></li>
        <% end %>
        <% if @assignment_form.assignment.has_badge? %>
          <li><a href="#tabs-7" id="Badges">Badges</a></li>
        <% end %>
        <li><a href="#tabs-8" id="Other">Other stuff</a></li>
      </ul>
      <div id="tabs-1">
        <%= render 'assignments/edit/general' %>
      </div>
      <div id="tabs-2">
        <h3>Topics for <%= @assignment_form.assignment.name %> assignment</h3><br>
            <input name="assignment_form[assignment][allow_suggestions]" type="hidden" value="false"/>
            <%= check_box_tag('assignment_form[assignment][allow_suggestions]', 'true', @assignment_form.assignment.allow_suggestions) %>
            <%= label_tag('assignment_form[assignment][allow_suggestions]', 'Allow topic suggestions from students?') %>
            <br>
            <input name="assignment_form[assignment][is_intelligent]" type="hidden" value="false"/>
            <%= check_box_tag('assignment_form[assignment][is_intelligent]', 'true', @assignment_form.assignment.is_intelligent?)%>
            <%= label_tag('assignment_form[assignment][is_intelligent]', 'Enable bidding for topics?') %>
            <img src="/assets/info.png" title="This feature allow students to &quot;bid&quot; for topics.
      Instructor must specify when topics are assigned, by going to the Due Dates tab and
      entering a due date for &quot;signup&quot;."/>
            <br>
            <input name="assignment_form[assignment][can_review_same_topic]" type="hidden" value="false"/>
            <%= check_box_tag('assignment_form[assignment][can_review_same_topic]', 'true', @assignment_form.assignment.can_review_same_topic?)%>
            <%= label_tag('assignment_form[assignment][can_review_same_topic]', 'Enable authors to review others working on same topic?') %>
            <img src="/assets/info.png" title="If checked, it is possible that the authors review another artifact on the same topic "/>
            <br>

            <input name="assignment_form[assignment][can_choose_topic_to_review]" type="hidden" value="false"/>
            <%= check_box_tag('assignment_form[assignment][can_choose_topic_to_review]', 'true', @assignment_form.assignment.can_choose_topic_to_review?)%>
            <%= label_tag('assignment_form[assignment][can_choose_topic_to_review]', 'Allow reviewer to choose which topic to review?') %>

            <br>
            <input name="assignment_form[assignment][use_bookmark]" type="hidden" value="false"/>
            <%= check_box_tag('assignment_form[assignment][use_bookmark]', 'true', @assignment_form.assignment.use_bookmark, {:onChange => 'useBookmarkChanged()'})%>
            <%= label_tag('assignment_form[assignment][use_bookmark]', 'Allow participants to create bookmarks?') %>
          <br><br>
          <% if @assignment_form.assignment.staggered_deadline == true %>
              <%= render partial: '/sign_up_sheet/add_signup_topics_staggered', locals: {review_rounds: @review_rounds, assignment_submission_due_dates: @assignment_submission_due_dates, assignment_review_due_dates: @assignment_review_due_dates} %>
          <% else %>
              <%= render '/sign_up_sheet/add_signup_topics' %>
          <% end %>
      </div>
      <div id="tabs-3">
        <%= render 'assignments/edit/rubrics' %>
      </div>
      <div id="tabs-4">
        <%= render 'assignments/edit/review_strategy' %>
      </div>
      <div id="tabs-5">
        <%= render 'assignments/edit/due_dates' %>
      </div>
      <% if @assignment_form.assignment.is_calibrated %>
        <div id="tabs-6">
          <%= render 'assignments/edit/calibration' %>
        </div>
      <% end %>
      <% if @assignment_form.assignment.has_badge? %>
        <div id="tabs-7">
          <%= render 'assignments/edit/badges' %>
        </div>
      <% end %>
      <div id="tabs-8">
        <%= render 'assignments/edit/other' %>
      </div>
      <div style="margin-bottom: 20px">
      <%= button_tag "Save", :id => 'submit_btn', class: 'btn btn-md btn-default', :style => "margin-left: 20px;" %> | <%= render :partial => '/shared_scripts/back' %>
      </div>
    </div>
    <script>
      var useBookmarkChanged = function () {
          jQuery("#questionnaire_table_BookmarkRatingQuestionnaire").remove()
          var bookmark_checkbox = jQuery('#assignment_form_assignment_use_bookmark');
          if (bookmark_checkbox.is(':checked')) {
            addQuestionnaireTableRow(
                    'BookmarkRatingQuestionnaire',
                    null,
                    <%= questionnaire(@assignment_form.assignment, 'BookmarkRatingQuestionnaire',nil).to_json.html_safe %>,
                    <%= assignment_questionnaire(@assignment_form.assignment, 'BookmarkRatingQuestionnaire',nil).to_json.html_safe %>,
                    <%= questionnaire_options(@assignment_form.assignment, 'BookmarkRatingQuestionnaire',nil).to_json.html_safe %>
            );
          }
      }

      jQuery(document).ready(function () {
        jQuery("#submit_btn").click(function(e) {
          var max_team_size = jQuery('#assignment_form_assignment_max_team_size').val();
          if (max_team_size == '1' && jQuery('#team_assignment').is(':checked')) {
              alert("Maximum number of members per team must be greater than 1!");
              e.preventDefault()
          }
        })
        jQuery("#tabs").tabs({
          beforeActivate: function (event, ui) {
            var deleteTeam = 0;
            var frm = jQuery("#assignment_form");
            var max_team_size = jQuery('#assignment_form_assignment_max_team_size').val();
            if (max_team_size == '1' && jQuery('#team_assignment').is(':checked')) {
              deleteTeam = 1;
              alert("Maximum number of members per team must be greater than 1!");
            }
            if (deleteTeam == 0) {
              jQuery.ajax({
                url: frm.attr('action'),
                method: frm.attr('method'),
                data: frm.serialize(),
              })
            } else {
              event.preventDefault();
            }
          }
        });
        if (<%= params[:tab]=='tab3'%>) {
          $('#ReviewStrategy').click();
        }
      });

      $('#go_to_tabs2').click(function(){
        $('#Rubrics').click();
      });
    </script>
  <% end %>

  <br/>
