{
  "name": "react-simpletabs",
  "version": "0.7.0",
  "description": "Just a simple tabs component built with React",
  "author": {
    "name": "Pedro Nauck",
    "email": "pedronauck@gmail.com",
    "url": "https://github.com/pedronauck"
  },
  "bugs": {
    "url": "https://github.com/pedronauck/react-simpletabs/issues"
  },
  "homepage": "https://github.com/pedronauck/react-simpletabs",
  "license": "MIT",
  "main": "dist/react-simpletabs.js",
  "repository": {
    "type": "git",
    "url": "git://github.com/pedronauck/react-simpletabs"
  },
  "keywords": [
    "react",
    "react-component",
    "react-tabs",
    "tabs",
    "tab"
  ],
  "scripts": {
    "publish": "npm publish && bower register react-simpletabs git@github.com:pedronauck/react-simpletabs.git",
    "bundle": "gulp webpack && gulp webpack --production",
    "start": "gulp",
    "test": "jest"
  },
  "jest": {
    "scriptPreprocessor": "./utils/jsx-preprocessor.js",
    "unmockedModulePathPatterns": [
      "./node_modules/react"
    ],
    "testFileExtensions": [
      "js",
      "jsx"
    ],
    "moduleFileExtensions": [
      "js",
      "jsx",
      "json"
    ]
  },
  "peerDependencies": {
    "react": "0.12.x - 1.x"
  },
  "dependencies": {
    "classnames": "^1.2.0"
  },
  "devDependencies": {
    "browser-sync": "^1.5.2",
    "css-loader": "^0.9.0",
    "extract-text-webpack-plugin": "^0.3.1",
    "gulp": "^3.8.6",
    "gulp-util": "^3.0.1",
    "jest-cli": "^0.1.18",
    "jsx-loader": "^0.12.2",
    "lodash": "^2.4.1",
    "react": "0.12.x - 1.x",
    "react-tools": "^0.12.2",
    "style-loader": "^0.8.1",
    "webpack": "^1.4.4"
  },
  "readme": "# React SimpleTabs\n\n![Git release](http://img.shields.io/github/release/pedronauck/react-simpletabs.svg?style=flat) ![Travis](http://img.shields.io/travis/pedronauck/react-simpletabs.svg?style=flat) ![license](http://img.shields.io/npm/l/react-simpletabs.svg?style=flat)\n\n[![NPM](https://nodei.co/npm/react-simpletabs.png)](https://nodei.co/npm/react-simpletabs/)\n\n![](http://f.cl.ly/items/25263r432i1W2U3p3b2m/react-simplestabs-screenshot.png)\n\nThis is a simple `<Tabs>` component built with ReactJS.\n\n#### See the [Demo](http://embed.plnkr.co/p6YVUK/preview).\n\n## Install\n\nInstalling this component is very easy and it has just one dependency: [React](http://facebook.github.io/react/downloads.html). So, you have a lot of options to do that:\n\n- Using NPM *~the quickest way~*\n```bash\n  $ npm install --save react-simpletabs\n```\n\n- Using Bower\n```bash\n  $ bower install --save react-simpletabs\n```\n\n- Or if you want to [download the lastest release](https://github.com/pedronauck/react-simpletabs/archive/v0.7.0.zip) and put in your website, it will work too!\n\n**NOTICE:** You need just one thing to make the component work. Put the [base component style](./dist/react-simpletabs.css) at the `<header>` tag. If you don't wanna use the `.css` extension, you can get the `.styl` or `.scss` extension at the folder `./lib`.\n\nThen you're done! :smile_cat:\n\n## Usage\n\nUsing the component is simpler than installing. See an example with [browserify](http://truongtx.me/2014/07/18/using-reactjs-with-browserify-and-gulp/) to bundle your script:\n\n```javascript\n/** @jsx React.DOM */\n\nvar Tabs = require('react-simpletabs');\nvar App = React.createClass({\n  render: function() {\n    return (\n      <Tabs>\n        <Tabs.Panel title='Tab #1'>\n          <h2>Content #1 here</h2>\n        </Tabs.Panel>\n        <Tabs.Panel title='Tab #2'>\n          <h2>Content #2 here</h2>\n        </Tabs.Panel>\n        <Tabs.Panel title='Tab #3'>\n          <h2>Content #3 here</h2>\n        </Tabs.Panel>\n      </Tabs>\n    );\n  }\n});\n\nReact.renderComponent(<App />, mountNode);\n```\n\nIf you decide to use just Javascript without any module loader, you can get the global variable `window.ReactSimpleTabs` *(or just `ReactSimpleTabs`)*:\n\n```javascript\n  /** @jsx React.DOM */\n\n  var Tabs = ReactSimpleTabs;\n  var App = React.createClass({\n    render: function() {\n      ...\n    }\n  });\n```\n\n##### `<Tabs.Panel>`\n\nWell, the `Tabs.Panel` component is a [namespaced component](http://facebook.github.io/react/blog/2014/07/17/react-v0.11.html#jsx) of the `Tabs`, this is easiest way and you avoid to declare a bunch of variables.\n\n**NOTE:** It is required that you put the `title` property to the `Tabs.Panel` component. Without this, the component won't work, ok?\n\n## Behind the Scene\n\nThere are some things that you should know about the component. The first one is the structure created inside by the component if you wish to stylize it.\n\nSo, the semantic HTML structure will be something like this:\n\n```html\n  <div class='tabs'>\n    <nav class='tabs-navigation'>\n      <ul class='tabs-menu'>\n        <li class='tabs-menu-item is-active'>Tab #1</li>\n        <li class='tabs-menu-item'>Tab #2</li>\n      </ul>\n    </nav>\n    <article class='tab-panel'>\n      The content of active panel here\n    </article>\n  <div>\n```\n\nThis is a very simple structure to stylize however you want. So, if you are lost, don't panic, there is a [real functional example](/example) that you can follow.\n\nThe other thing that I have to share with you is that the component has some properties that you can use. Example:\n\nIf you want to set a default tab active you can use the `tabActive` property:\n\n```javascript\n  ...\n  render: function() {\n    return (\n      <Tabs tabActive={2}>\n        ...\n      </Tabs>\n    );\n  }\n  ...\n```\n\nAnd if you want to do something before or after the changed tab, you can do use the `onBeforeChange` or `onAfterChange` property (or both together):\n\n```javascript\n  ...\n  handleMount: function(selectedIndex, $selectedPanel, $selectedTabMenu) {\n    console.log('on mount, showing tab ' + selectedIndex);\n  },\n  handleBefore: function(selectedIndex, $selectedPanel, $selectedTabMenu) {\n    console.log('Something before tab ' + selectedIndex);\n  },\n  handleAfter: function(selectedIndex, $selectedPanel, $selectedTabMenu) {\n    console.log('Something after tab ' + selectedIndex);\n  },\n  render: function() {\n    return (\n      <Tabs\n        tabActive={2}\n        onBeforeChange={this.handleBefore}\n        onAfterChange={this.handleAfter}\n        onMount={this.handleMount}>\n        ...\n      </Tabs>\n    );\n  }\n  ...\n```\n\nFor more details, check out the API below.\n\n## Component API\n\n`<Tab>` component:\n\nProperty | Type | Default | Required | Description\n-------- | ---- | ------- | -------- |-----------\nclassName | `Array\\|Object\\|String` | n/a | no | Additional class names for wrapping div\ntabActive | `Number` | 1 | no | The default tab active\nonMount | `Function` | n/a | no | The function that will be executed when the component is mounted\nonBeforeChange | `Function` | n/a | no | The function that will be executed **before** the state of the component change. Return `false` to cancel the change to the active tab.\nonAfterChange | `Function` | n/a | no | The function that will be executed **after** the state of the component change\n\n`<Tab.Panel>` component:\n\nProperty | Type | Default | Required | Description\n-------- | ---- | ------- | -------- |-----------\ntitle | `String` | n/a | yes | The title that will generate the *tab menu items*\n\n## Contributing\n\nAnyone can help make this project better - check out the [Contributing guide](CONTRIBUTING.md)!\n\n## License\n\nSee the [License](LICENSE) file.\n",
  "readmeFilename": "README.md",
  "_id": "react-simpletabs@0.7.0",
  "dist": {
    "shasum": "743cddd45d04a06b570525994e3d450b898f39bf"
  },
  "_from": "react-simpletabs@",
  "_resolved": "https://registry.npmjs.org/react-simpletabs/-/react-simpletabs-0.7.0.tgz"
}
