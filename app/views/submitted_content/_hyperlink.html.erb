<%= form_for :hyperlinks, url: '/submitted_content/remove_hyperlink' do |f| %>
  <% if stage != "Finished" %>
    <% team_id = TeamsUser.team_id(participant.parent_id, participant.user_id) %>
    <% display_to_author = Team.exists?(team_id) && Team.find(team_id).has_user(@current_user)%>

    <% if display_to_author %>
      <b>Hyperlink Actions:</b><BR/>
      </br>
      <%= f.submit 'Delete selected hyperlink' %>
    <% end  %>
    </br>

    <%= f.hidden_field :participant_id, value: participant.id %>
    </br>
  <% end %>

  <b>Hyperlinks</b>&nbsp;&nbsp;&nbsp;

  <a href="#" id="urlLink" name="urlLink" onClick="toggleElement('url','links');return false;">hide links</a><br/>
  <div id="url" style="">
    <ul>
      <% participant.team.hyperlinks.each_with_index {
        |link, index| %>
      <% if stage != "Complete" %>
        <% if display_to_author%>
          <% if index == 0 %>
            <input type="radio" id='chk_links' name='chk_links' checked value="<%= index %>"/>
          <% else %>
            <input type="radio" id='chk_links' name='chk_links' value="<%= index %>"/>
          <% end %>
        <% end %>
          <% if local_assigns[:response_check] %>
            <a href="<%= link %>" class="review_link"><%= link %></a>
          <% else %>
            <a href="<%= link %>" target="_blank"><%= link %></a>
          <% end %>
            <br/>
      <% end %>
      <% } %>
    </ul>
  </div>

  <% if local_assigns[:response_check] %>
  <script type="text/javascript">
    function ISODateString(date){
      function pad(num){return num<10? '0'+num: num;}
      return date.getUTCFullYear()+'-'
                + pad(date.getUTCMonth()+1) + '-'
                + pad(date.getUTCDate()) + ' '
                + pad(date.getUTCHours()) + ':'
                + pad(date.getUTCMinutes()) + ':'
                + pad(date.getUTCSeconds());
    }
    $(document).ready(function(){
      var window_counter = 0;
      $("#url a.review_link").click(function linkAction(event){
        event.preventDefault();
        var link_handler = $(this); // current link
        var address = link_handler.attr("href"); // url address of the current link
        var window_handler = window.open(address); // open link in new window/tag
        // var t_start = new Date(); // open time
        startTime(<%= map_id %>, <%= round %>, address);
        var link_timer = setInterval(checkWindowStatus, 1000); // check window open/close every second

        function startTime(map_id, round, link) {
          var t = new Date();
          $.ajax({
            type: "POST",
            url: '/response_times/record_start_time',
            data: $.param({response_time:{map_id: map_id, round: round, link: link, start_at: ISODateString(t)}})
          });
        }

        function endTime(link){
          var t = new Date();
          $.ajax({
            type: 'POST',
            dataType: 'json',
            async: false,
            url: '/response_times/record_end_time',
            data: $.param({
              response_time: {map_id: <%= map_id %>, round: <%= round %>, link: link, end_at: ISODateString(t)}
              }),
            /*success: function(json){
              var links = JSON.parse(JSON.stringigy(json));
              for (lk in links)
                console.log(lk+" review time is complete!");
            }*/
            failure: function(){
              console.log("review time failed to save!");
            }
          });
        }

        function checkWindowStatus(){
          if (window_handler.closed){
            endTime(address);
            clearInterval(link_timer);
          }
        }
      });
    });
  </script>
  <% end %>
<% end %>
