diff --git a/app/controllers/questionnaires_controller.rb b/app/controllers/questionnaires_controller.rb
index 05eb82f..91232c6 100755
--- a/app/controllers/questionnaires_controller.rb
+++ b/app/controllers/questionnaires_controller.rb
@@ -110,41 +110,44 @@ class QuestionnairesController < ApplicationController
     session[:return_to] = request.original_url
   end
 
-  # def update
-  #   puts "update called."
-  #   # If 'Add' or 'Edit/View advice' is clicked, redirect appropriately
-  #   if params[:add_new_questions]
-  #     # redirect_to action: 'add_new_questions', id: params.permit(:id)[:id], question: params.permit(:new_question)[:new_question]
-  #     nested_keys = params[:new_question].keys
-  #     permitted_params = params.permit(:id, :new_question => nested_keys)
-  #     redirect_to action: 'add_new_questions', id: permitted_params[:id], question: permitted_params[:new_question]
-  #   elsif params[:view_advice]
-  #     redirect_to controller: 'advice', action: 'edit_advice', id: params[:id]
-  #   else
-  #     @questionnaire = Questionnaire.find(params[:id])
-  #     begin
-  #       # Save questionnaire information
-  #       @questionnaire.update_attributes(questionnaire_params)
-
-  #       # Save all questions
-  #       unless params[:question].nil?
-  #         params[:question].each_pair do |k, v|
-  #           @question = Question.find(k)
-  #           # example of 'v' value
-  #           # {"seq"=>"1.0", "txt"=>"WOW", "weight"=>"1", "size"=>"50,3", "max_label"=>"Strong agree", "min_label"=>"Not agree"}
-  #           v.each_pair do |key, value|
-  #             @question.send(key + '=', value) unless @question.send(key) == value
-  #           end
-  #           @question.save
-  #         end
-  #       end
-  #       flash[:success] = 'The questionnaire has been successfully updated!'
-  #     rescue StandardError
-  #       flash[:error] = $ERROR_INFO
-  #     end
-  #     redirect_to action: 'edit', id: @questionnaire.id.to_s.to_sym
-  #   end
-  # end
+  def update
+    puts "update called."
+    # If 'Add' or 'Edit/View advice' is clicked, redirect appropriately
+    if params[:add_new_questions]
+      puts "hello1"
+      # redirect_to action: 'add_new_questions', id: params.permit(:id)[:id], question: params.permit(:new_question)[:new_question]
+      nested_keys = params[:new_question].keys
+      permitted_params = params.permit(:id, :new_question => nested_keys)
+      redirect_to action: 'add_new_questions', id: permitted_params[:id], question: permitted_params[:new_question]
+    elsif params[:view_advice]
+      puts "hello1"
+      redirect_to controller: 'advice', action: 'edit_advice', id: params[:id]
+    else
+      puts "hello1"
+      @questionnaire = Questionnaire.find(params[:id])
+      begin
+        # Save questionnaire information
+        @questionnaire.update_attributes(questionnaire_params)
+
+        # Save all questions
+        unless params[:question].nil?
+          params[:question].each_pair do |k, v|
+            @question = Question.find(k)
+            # example of 'v' value
+            # {"seq"=>"1.0", "txt"=>"WOW", "weight"=>"1", "size"=>"50,3", "max_label"=>"Strong agree", "min_label"=>"Not agree"}
+            v.each_pair do |key, value|
+              @question.send(key + '=', value) unless @question.send(key) == value
+            end
+            @question.save
+          end
+        end
+        flash[:success] = 'The questionnaire has been successfully updated!'
+      rescue StandardError
+        flash[:error] = $ERROR_INFO
+      end
+      redirect_to action: 'edit', id: @questionnaire.id.to_s.to_sym
+    end
+  end
 
   # Remove a given questionnaire
   def delete
@@ -236,6 +239,7 @@ class QuestionnairesController < ApplicationController
   def save_all_questions
     puts "save_all_questions called."
     questionnaire_id = params[:id]
+    puts params[:questionnaire].inspect
     begin
       if params[:save]
         params[:question].each_pair do |k, v|
