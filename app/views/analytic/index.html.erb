<h1>Analytic</h1>
<script src='/javascripts/highcharts.js'></script>
<script>
  var remove_chart;
    var add_chart;
    var choose_compare_type;
    var choose_course;
    var choose_assignment;
    var multi_chart = false;
<%=render 'static'%>
    var test_data = {
      course_list : [["course 1",1],["course 2",2]],
        assignment_list : [
          [["assignment 1",1],["assignment 2",2]],
            [["assignment 01",1],["assignment 02",2]]
        ],
        team_list : [
          [["team 1",1],["team 2",2]],
            [["T 1",1],["T 2",2]]
        ],
        graph_option_list : [
          "bar chart","scatter plot"
        ]
    };
    function draw(obj) {
      var arg,ids,graph_options,i;
        arg = "type=" + obj.find(".graph_type")[0].value;
        arg += "&scope=" + obj.find(".compare_type")[0].value;
        graph_options = obj.find(".graph_options_checkboxes").find("input[type='checkbox']:checked");

        ids = obj.find("." + obj.find(".compare_type")[0].value + "_checkboxes").find("input[type='checkbox']:checked");
        for (i = 0; i < ids.length; i++) {
          arg += "&id[]=" +ids[i].value;
        }
        for (i = 0; i < graph_options.length; i++) {
          arg += "&data_type[]=" +graph_options[i].value;
        }

        obj.find(".chart")[0].innerHTML = "Please wait....";
        jQuery.get("/analytic/get_graph_data_bundle?" + arg, function (json) {
          console.log(json);
            if (json == null) {
              obj.find(".chart")[0].innerHTML = "Can not load chart. Please select at least one data point and at least one scope.";
            } else {
              obj.find(".chart").highcharts(json);
            }
            jQuery("tspan:contains('Highcharts.com')").remove();
        });
    }
    jQuery(document).ready(
      function () {
        var chart_max_id;
            chart_max_id = 0;
            remove_chart = function (id) {
              jQuery("#chart_" + id).remove();
            };
            add_chart = function () {
              var chart_element,chart_id;
                chart_max_id ++;
                chart_id = "chart_" + chart_max_id;
                chart_element = jQuery("<table id='" + chart_id + "' width='100%'><tbody><tr><td width='280px'><table><tbody  class='options'><tr><td>Graph Type:<br /><select name='graph_type' class='graph_type'><option selected disabled value='default'></option><option value='bar'>bar chart</option><option value='line'>line graph</option><option value='pie'>pie chart</option><option value='scatters' disabled>scatter plot</option></select></td></tr><tbody></table></td><td class='chart'></td></tr><tr><td></td><td align='right'><hr /><input type='button' value='Remove' onclick='remove_chart(" + chart_max_id + ");'></td></tr></tbody></table>");
                jQuery("#draw_area").append(chart_element);
                chart_element.find(".options").append(new_option(0, "Comparison Scope",
                        "<select name='compare_type' class='compare_type' onchange='choose_compare_type(this);'><option value='default' disabled selected class='default_option'></option><option value='course'>course</option><option value='assignment'>assignment</option value='team'><option>team</option></select><br />"
                )
                );
            };
            function get_tbody(obj) {
              var cur;
                cur = obj;
                while (!/tbody/i.exec(cur.nodeName)) {
                  cur = cur.parentElement;
                }
                return jQuery(cur);
            }
            function new_option(level,text,obj,scrollable,div_class) {
              var str;
                if (scrollable === undefined || scrollable == false) {
                  str = ""
                } else {
                  str = " style='OVERFLOW-Y:scroll; HEIGHT:150px' class='" + div_class + "'";
                }
                return jQuery("<tr class='tr_"+level+"'><td>" + text + ":<br /><div" + str + ">" + obj + "</div></td></tr>");
            }
            function get_this_level(obj) {
              return parseInt(obj.parentElement.parentElement.parentElement.className.substring(3,4))
            }
            function remove_following_options(obj) {
              var tbody,i,tr;
                tbody = get_tbody(obj);
                for (i = get_this_level(obj) + 1; true; i++) {
                  tr = tbody.find(".tr_" + i);
                    if (tr.length == 0) {
                      break;
                    }
                    tr.remove();
                }
            }
            function show_graph_options(level,tbody) {
              var scope,type;
                type = tbody.find(".graph_type")[0].value;
                scope = tbody.find(".compare_type")[0].value;
                jQuery.get("/analytic/graph_data_type_list?scope=" + scope + "&type=" + type,function (json) {
                  var check_box_list,i;
                    check_box_list = "";
                    for (i = 0; i < json.length; i++) {
                      check_box_list += json[i].replace(/_/ig," ") + "<input type='checkbox' value='" + json[i] + "'><br />";
                    }
                    tbody.append(new_option(level + 1, "Data", check_box_list, true, "graph_options_checkboxes"));
                    tbody.find("input[type='checkbox']").change(function() {draw(get_tbody(tbody[0].parentElement))});
                });
                /*
                function call_back(json) {
                  var str="";
                    var i;
                    str += "<select onchange='show_graph();'>";
                    str += "<option value='default' disabled selectd></option>";
                    for (i = 0; i < json.length; i++) {
                      str += "<option value='" + json[i] + "' >" + json[i] + "</option>";
                    }
                    str+= "</select>";
                    obj.append(new_option(level,"Graph Type",str));
                }
                call_back(test_data.graph_option_list);
                */
            }
            function get_compare_type(obj) {
              return jQuery(obj.parentElement.parentElement.parentElement.parentElement).find(".compare_type")[0].value;
            }
            choose_compare_type = function (obj) {
              var tbody, level;
                remove_following_options(obj);
                tbody = get_tbody(obj);
                level = get_this_level(obj);
                function course_list_load_call_back(json) {
                  var i,new_op,show_go=false;
                    switch(get_compare_type(obj)) {
                      case "assignment":
                        case "team":
                          new_op = "<select class='select_course' name='select_course' onchange='choose_course(this)'><option value='default' disabled selected></option>";
                            for (i = 0; i < json.length; i++) {
                              new_op += "<option value='" + json[i][1] + "'>" + json[i][0] + "</option>";
                            }
                            new_op +="</select>";
                            break;
                        case "course":
                          new_op = "";
                            for (i = 0; i < json.length; i++) {
                              new_op += json[i][0] + ":<input type='checkbox' value='" + json[i][1] + "'><br />";
                            }
                            show_go = true;
                            break;
                    }
                    tbody.append(new_option(level + 1, "Course", new_op, show_go, "course_checkboxes"));
                    if (show_go) {
                      show_graph_options(level + 1,tbody);
                    }
                }
                jQuery.get("/analytic/course_list",course_list_load_call_back);
            };
            choose_course = function (obj) {
              var tbody, level;
                remove_following_options(obj);
                tbody = get_tbody(obj);
                level = get_this_level(obj);
                function assignment_list_load_call_back(json) {
                  var i,new_op,show_go;
                    show_go = false;
                    switch(get_compare_type(obj)) {
                      case "team":
                        new_op = "<select class='select_assignment' name='select_assignment' onchange='choose_assignment(this)'><option value='default' disabled selected></option>";
                            for (i = 0; i < json.length; i++) {
                              new_op += "<option value='" + json[i][1] + "'>" + json[i][0] + "</option>";
                            }
                            new_op +="</select>";
                            break;
                        case "assignment":
                          new_op = "";
                            for (i = 0; i < json.length; i++) {
                              new_op += json[i][0] + ":<input type='checkbox' value='" + json[i][1] + "'><br />";
                            }
                            show_go = true;
                            break;
                    }
                    tbody.append(new_option(level + 1, "Assignment", new_op, show_go, "assignment_checkboxes"));
                    if (show_go) {
                      show_graph_options(level + 1,tbody);
                    }
                }
                jQuery.get("/analytic/assignment_list?course_id=" + obj.value, assignment_list_load_call_back);
            };
            choose_assignment = function (obj) {
              var tbody, level;
                remove_following_options(obj);
                tbody = get_tbody(obj);
                level = get_this_level(obj);
                function team_list_load_call_back(json) {
                  var i,new_op;
                    new_op = "";
                    for (i = 0; i < json.length; i++) {
                      new_op += json[i][0] + ":<input type='checkbox' value='" + json[i][1] + "'><br />";
                    }
                    tbody.append(new_option(level + 1, "Team", new_op, true, "team_checkboxes"));
                    show_graph_options(level + 1,tbody);
                }
                jQuery.get("/analytic/team_list?assignment_id=" + obj.value,team_list_load_call_back);
            };
            add_chart();
            if (!multi_chart) {
              jQuery("input[type='button'][value='Remove']").hide();
                jQuery("input[type='button'][value='Add New Chart']").hide();
            }
        }
    );
  </script>
  <input type='button' value='Add New Chart' onclick='add_chart();'>
  <div id="draw_area">

  </div>
