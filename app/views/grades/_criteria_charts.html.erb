<html>
  <head>
    <%= content_tag :div, class: "chartdata_information", data: {chartdata: @chartdata} do %>
    <% end %>
    <%= content_tag :div, class: "text_information", data: {text: @text} do %>
    <% end %>
    <%= content_tag :div, class: "minmax_information", data: {minmax: @minmax} do %>
    <% end %>

    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
      google.charts.load('current', {packages: ['corechart', 'bar']});
      google.charts.setOnLoadCallback(drawBasic);
      var chart;
      var chartOptions;
      var chartData = [];					//Stores all data for the chart to display
      var currentRound = 0;				//Stores the current displayed round
      var criteriaSelected = [];
      var chartText = [];
      var chartRange = [];	//Stores selected criteria to display
      window.onresize = function(){renderChart()};

      //Display Options
      var showLabels = true;
      var barColors = [ // Other colors generated from the expertiza base red
          '#A90201',    // using paletton.com
          '#018701',
          '#016565',
          '#A94D01'
      ];

      function getData(){ //Loads all chart data from the page
        chartData = $('.chartdata_information').data('chartdata');
        chartText = $('.text_information').data('text');
        chartRange = $('.minmax_information').data('minmax');
        for (var i = 0; i < chartData.length; i++){ //Set all the criteriaSelected to true
          var criteria = [];
          for (var j = 0; j < chartData[i].length; j++){
            criteria.push(true);
          }
          criteriaSelected.push(criteria);
        }
      }

      function generateData() {	//Generates random data for testing
        var rounds = 3;
        for(var i = 0; i < rounds; i++) {
          var criteriaNum = Math.floor(Math.random() * 5 + 5);  //Random number of criteria
          var round = [];
          var criteria = [];
          for(var j = 0; j < criteriaNum; j++) {
            round.push(Math.floor(Math.random() * 101));  //Random score for each criterion
            criteria.push(true);  //Everything starts out true
          }
          chartData.push(round);
          criteriaSelected.push(criteria);
        }
      }

      function drawBasic() {	//Initializes all google chart information
        getData();
        chartOptions = {		//Render options for the chart
          title: 'Class Average on Criteria',
          titleTextStyle: {
            fontName: 'arial',
            fontSize: 18,
            italic: false,
            bold: true
          },
          legend: 'none',
          bar: {
            groupWidth: 'default'
          },
          hAxis: {
            title: 'Criterion',
            titleTextStyle: {
              fontName: 'arial',
              fontSize: 14,
              italic: false,
              bold: false,
            },
            ticks: [],
            viewWindow: {
              min: 0.5,
              max: 'default',
            }
          },
          vAxis: {
            title: 'Average Score',
            titleTextStyle: {
              fontName: 'arial',
              fontSize: 14,
              italic: false,
              bold: false
            },
            viewWindow: {
              min: 0,
              max: 5
            },
            targetAxisIndex: 0
          }
        };
        chart = new google.visualization.ColumnChart(document.getElementById('chart_div'));
        var checkBox = document.getElementById("labelCheck");
        checkBox.checked = true;
        checkBox.style.display = "inline";
        updateChart(currentRound);
        loadRounds();
      }

      function updateChart(roundNum) {	//Updates the chart with a new round number and renders
        currentRound = roundNum;
        renderChart();
        loadCriteria();
      }

      function renderChart() {	//Renders the chart if changes have been made
        var data = loadData();
        chartOptions.vAxis.viewWindow.max = chartRange[currentRound][1];
        chartOptions.vAxis.viewWindow.min = chartRange[currentRound][0];
        chart.draw(data, chartOptions);
      }

      function renderChart() {	//Renders the chart if changes have been made
          var data = loadData();
          chartOptions.vAxis.viewWindow.max = 5;
          chartOptions.vAxis.viewWindow.min = 0;
          if (chartRange[currentRound]) { //Set axis ranges if they exist
              if (chartRange[currentRound][1])
                  chartOptions.vAxis.viewWindow.max = chartRange[currentRound][1];
              if (chartRange[currentRound][0])
                  chartOptions.vAxis.viewWindow.min = chartRange[currentRound][0];
          }
          chart.draw(data, chartOptions);
      }

      function loadData() {	//Pulls data from the page and renders the chart with it
          if (currentRound == -1)	//Load all rounds for comparison
              return loadAllData();
          var data = new google.visualization.DataTable();
          data.addColumn('number', 'Criterion');
          data.addColumn('number', 'Average Score');
          data.addColumn({type: 'string', role: 'style'});	//column for specifying the bar color
          data.addColumn({type: 'string', role: 'annotation'});

          chartOptions.hAxis.ticks = [];
          var rowCount = 1;
          for(var i = 0; i < chartData[currentRound].length; i++) { //Add a chart row for each criterion if not null
              if (criteriaSelected[currentRound][i] && chartData[currentRound][i]) {
                  data.addRow([rowCount, chartData[currentRound][i], barColors[0], (showLabels) ? chartData[currentRound][i].toFixed(1).toString() : ""]);
                  chartOptions.hAxis.ticks.push({v: rowCount++, f: (i+1).toString()});
              }
          }
          chartOptions.hAxis.viewWindow.max = rowCount - 0.5;
          return data;
      }
      function loadAllData() {
          var roundNum = chartData.length;
          var maxCriteria = 0;
          var data = new google.visualization.DataTable();
          data.addColumn('number', 'Criterion');
          var i;
          for(i = 0; i < roundNum; i++) { //Add all columns for the data
              data.addColumn('number', 'Round ' + (i+1).toString());
              data.addColumn({type: 'string', role: 'style'});	//column for specifying the bar color
              data.addColumn({type: 'string', role: 'annotation'});

              if (chartData[i].length > maxCriteria)
                  maxCriteria = chartData[i].length;
          }

          chartOptions.hAxis.ticks = [];
          chartOptions.series = {};
          var rowCount = 1;
          for(i = 0; i < maxCriteria; i++) {
              var newRow = [];
              var elementsAdded = false;
              newRow.push(rowCount);
              for(var j = 0; j < roundNum; j++) { //If the round has the criterion, add it
                  if (chartData[j][i]) {
                      newRow.push(chartData[j][i]);
                      elementsAdded = true;
                  } else {
                      newRow.push(null);
                  }
                  newRow.push(barColors[j % barColors.length]); //Add column color
                  if (chartData[j] && chartData[j][i] && showLabels)
                      newRow.push(chartData[j][i].toFixed(1).toString()); //Add column annotations
                  else
                      newRow.push("");
              }
              if (elementsAdded) {
                  data.addRow(newRow);
                  chartOptions.hAxis.ticks.push({v: rowCount++, f: (i+1).toString()});
                  chartOptions.series[i] = {targetAxisIndex: 0};
              }
          }
          chartOptions.hAxis.viewWindow.max = rowCount - 0.5;
          return data;

      }

      function loadRounds() {	//Creates the Rounds in the dropdown menu
          var rounds = document.getElementById("chartRounds");
          for(var i = 0; i < chartData.length; i++) {
              var option = document.createElement('option');
              option.value = i;
              option.text = "Round " + (i+1);
              rounds.add(option);
          }
          var optionAll = document.createElement('option');
          optionAll.value = -1;
          optionAll.text = "All Rounds";
          rounds.add(optionAll);
          rounds.style.display = "inline";
      }

      function loadCriteria() {	//Creates the criteria check boxes
          var form = document.getElementById("chartCriteria");
          while (form.firstChild) //Clear out the old check boxes
              form.removeChild(form.firstChild);
          if (currentRound == -1) //Don't show criteria for 'all rounds'
              return;
          chartData[currentRound].forEach(function(dat, i) {
              var checkbox = document.createElement('input');
              checkbox.type = "checkbox";
              checkbox.id = "checkboxoption" + i;
              checkbox.onclick = function() { //Register callback to toggle the criterion
                  checkboxUpdate(i);
              }
              var label = document.createElement('label')
              label.htmlFor = checkbox.id;
              label.appendChild(document.createTextNode("Criterion " + (i+1) +": "+ chartText[currentRound][i]));
              form.appendChild(checkbox);
              form.appendChild(label);
              form.appendChild(document.createElement("BR"));
              checkbox.checked = criteriaSelected[currentRound][i];
          });
      }

      function checkboxUpdate(checkid) {	//Update function to change the displayed criteria
        var check = document.getElementById("checkboxoption" + checkid);
        criteriaSelected[currentRound][checkid] = check.checked;
        renderChart();
      }
    </script>
    </head>

  <a href="#" name='criteria_chartsLink' onClick="toggleElement('criteria_charts', 'chart'); renderChart(); return false;">show chart</a>
  <div id="criteria_charts" style="display: none">
    <hr>
    <div id="chart_div" style = "height: 400px; width: 60%;"></div>
    <form id="chartOptions" name="chartOptions">
      <select id="chartRounds" name="rounds" onChange="updateChart(document.chartOptions.chartRounds.options[document.chartOptions.chartRounds.options.selectedIndex].value)" style = "display: none">
      </select>
      <label><input type="checkbox" id = "labelCheck" checked="checked" style="display: none" onclick="showLabels = !showLabels; renderChart();">Show Labels</label>
    </form>
    <div id="chartCriteria" name="chartCriteria">
    </div>
  </div>
</html>
